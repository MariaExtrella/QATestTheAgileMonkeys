{"failedCount":1,"prefixedPath":"classpath:examples\/users\/TestUserNoAdminSaveCust.feature","packageQualifiedName":"examples.users.TestUserNoAdminSaveCust","loopIndex":-1,"relativePath":"examples\/users\/TestUserNoAdminSaveCust.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":1666800,"millis":1.6668,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"01:02:42.416 karate.env system property was: prod \n"},{"result":{"nanos":34700,"millis":0.0347,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":1,"text":"url httpUrl"}},{"result":{"nanos":38200600,"millis":38.2006,"status":"passed"},"step":{"comments":["#### Get the idToken for one of the user created by the admin. Datas are read from a JSON file"],"line":13,"prefix":"*","index":0,"text":"def datas = read('signinDatasUserNoAdmin.json')"}},{"result":{"nanos":653002600,"errorMessage":"status code was: 400, expected: 200, response time in milliseconds: 414, url: https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in, response: \n{\"__type\":\"UserNotFoundException\",\"message\":\"User does not exist.\"}\nclasspath:examples\/users\/signin.feature:21\nclasspath:examples\/users\/TestUserNoAdminSaveCust.feature:16","millis":653.0026,"status":"failed"},"step":{"comments":["# Call the feature to sign in the API with the JSON file that contains the user's datas"],"line":16,"prefix":"*","index":1,"text":"def signIn = call read('signin.feature') datas"},"stepLog":"01:02:43.134 classpath:examples\/users\/TestUserNoAdminSaveCust.feature:16\n* def signIn = call read('signin.feature') datas\nstatus code was: 400, expected: 200, response time in milliseconds: 414, url: https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in, response: \n{\"__type\":\"UserNotFoundException\",\"message\":\"User does not exist.\"}\nclasspath:examples\/users\/signin.feature:21\nclasspath:examples\/users\/TestUserNoAdminSaveCust.feature:16\n","callResults":[{"prefixedPath":"classpath:examples\/users\/signin.feature","loopIndex":-1,"callDepth":1,"description":"","resultDate":"2021-05-18 01:02:43 a.Â m.","durationMillis":632.1032,"callArg":{"password":"Password_1","clientId":"799hogucm363v55l7dk2n1l5u0","username":"user@test.com"},"failedCount":1,"packageQualifiedName":"examples.users.signin","relativePath":"examples\/users\/signin.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":18500,"millis":0.0185,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url httpUrl"}},{"result":{"nanos":2482900,"millis":2.4829,"status":"passed"},"step":{"endLine":14,"line":7,"prefix":"*","docString":"{\n  \t\t\"clientId\": \"#(clientId)\",\n        \"username\": \"#(username)\",\n  \t\t\"password\": \"#(password)\"\n\t}","index":0,"text":"def query ="}},{"result":{"nanos":3279400,"millis":3.2794,"status":"passed"},"step":{"line":15,"prefix":"*","index":1,"text":"print query"},"stepLog":"01:02:42.505 [print] {\n  \"clientId\": \"799hogucm363v55l7dk2n1l5u0\",\n  \"username\": \"user@test.com\",\n  \"password\": \"Password_1\"\n}\n \n"},{"result":{"nanos":4154000,"millis":4.154,"status":"passed"},"step":{"line":17,"prefix":"Given","index":2,"text":"path '\/auth\/sign-in'"}},{"result":{"nanos":23300,"millis":0.0233,"status":"passed"},"step":{"line":18,"prefix":"And","index":3,"text":"request query"}},{"result":{"nanos":434700,"millis":0.4347,"status":"passed"},"step":{"line":19,"prefix":"And","index":4,"text":"header Content-Type = 'application\/json'"}},{"result":{"nanos":621536900,"millis":621.5369,"status":"passed"},"step":{"line":20,"prefix":"When","index":5,"text":"method post"},"stepLog":"01:02:42.709 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 92\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"password\":\"Password_1\",\"clientId\":\"799hogucm363v55l7dk2n1l5u0\",\"username\":\"user@test.com\"}\n\n01:02:43.128 response time in milliseconds: 414\n1 < 400\n1 < Content-Type: application\/json\n1 < Content-Length: 67\n1 < Connection: keep-alive\n1 < Date: Mon, 17 May 2021 23:02:43 GMT\n1 < x-amzn-RequestId: 2983d399-554a-4229-96d6-9c1f5753b055\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: fftjCEs-DoEFkmg=\n1 < X-Amzn-Trace-Id: Root=1-60a2f613-574fc23b5a656b54674462ee\n1 < X-Cache: Error from cloudfront\n1 < Via: 1.1 eae0fbb8e97278d435febe844db04b08.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD50-C1\n1 < X-Amz-Cf-Id: GbVyFK3UXRmA1J5I4lwRLDjxJyss2_ZzLcEK7jNAsJkX2grfDHODbA==\n{\"__type\":\"UserNotFoundException\",\"message\":\"User does not exist.\"}\n"},{"result":{"nanos":173500,"errorMessage":"status code was: 400, expected: 200, response time in milliseconds: 414, url: https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in, response: \n{\"__type\":\"UserNotFoundException\",\"message\":\"User does not exist.\"}\nclasspath:examples\/users\/signin.feature:21","millis":0.1735,"status":"failed"},"step":{"line":21,"prefix":"Then","index":6,"text":"status 200"},"stepLog":"01:02:43.133 classpath:examples\/users\/signin.feature:21\nThen status 200\nstatus code was: 400, expected: 200, response time in milliseconds: 414, url: https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in, response: \n{\"__type\":\"UserNotFoundException\",\"message\":\"User does not exist.\"}\nclasspath:examples\/users\/signin.feature:21\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["#Get the idToken for the user"],"line":24,"prefix":"*","index":7,"text":"def tokenid = response.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"*","index":8,"text":"print tokenid"}}],"line":6,"description":"","durationMillis":632.1032,"failed":true,"error":"status code was: 400, expected: 200, response time in milliseconds: 414, url: https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in, response: \n{\"__type\":\"UserNotFoundException\",\"message\":\"User does not exist.\"}\nclasspath:examples\/users\/signin.feature:21","executorName":"main","name":"obtain a token for the admin user","startTime":1621292562499,"refId":"[1:6]","endTime":1621292563133,"exampleIndex":-1}],"name":"Get a token for the user to sign in the API","passedCount":0}]},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":17,"prefix":"*","index":2,"text":"print signIn.response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["#### Create the Authorization header"],"line":20,"prefix":"*","index":3,"text":"def idToken = signIn.response.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"*","index":4,"text":"def user_header = \"Bearer \" + idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"endLine":28,"comments":["#### An user can create a new customer"],"line":25,"prefix":"*","docString":"read('SaveCustomer.graphql')","index":5,"text":"def querySave ="}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# JSON file with the new user's datas","# In this case, the photoUrl field isn't filled"],"line":31,"prefix":"*","index":6,"text":"def new_customerNoPhoto = read('NewCustomerNoPhoto.json')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"Given","index":7,"text":"path 'graphql'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":8,"text":"header Authorization = signIn.response.tokenType + ' ' + signIn.response.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":9,"text":"request { query: '#(querySave)',  variables: '#(new_customerNoPhoto)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"When","index":10,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"Then","index":11,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":39,"prefix":"*","index":12,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":42,"prefix":"*","index":13,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# If the customer is saved, the response shouldn't contain a field \"error\""],"line":45,"prefix":"*","index":14,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# This time, the photoUrl is filled"],"line":48,"prefix":"*","index":15,"text":"def new_customerPhoto = read('NewCustomerPhoto.json')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"Given","index":16,"text":"path 'graphql'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":17,"text":"header Authorization = signIn.response.tokenType + ' ' + signIn.response.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":52,"prefix":"And","index":18,"text":"request { query: '#(querySave)',  variables: '#(new_customerPhoto)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":53,"prefix":"When","index":19,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":54,"prefix":"Then","index":20,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":56,"prefix":"*","index":21,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":59,"prefix":"*","index":22,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# If the customer is saved, the response shouldn't contain a field \"error\""],"line":62,"prefix":"*","index":23,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"endLine":69,"comments":["#### Now, list the customers previously saved by id and check if datas are correct"],"line":66,"prefix":"*","docString":"read('CustomerReadModel.graphql')","index":24,"text":"def queryCustomerReadModel ="}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Get the id of the customer previously saved without photo"],"line":71,"prefix":"*","index":25,"text":"def customer_savedNoPhoto = read('NewCustomerNoPhoto.json')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":73,"prefix":"Given","index":26,"text":"path 'graphql'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":74,"prefix":"And","index":27,"text":"header Authorization = signIn.response.tokenType + ' ' + signIn.response.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":75,"prefix":"And","index":28,"text":"request { query: '#(queryCustomerReadModel)', variables: '#(customer_savedNoPhoto)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":76,"prefix":"When","index":29,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":77,"prefix":"Then","index":30,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":80,"prefix":"*","index":31,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check that the datas of the customer are the same as we saved and it has the Id of the user who created it, in this case, the same as it's signed"],"line":82,"prefix":"*","index":32,"text":"match response.data.CustomerReadModel == {id: '#(customer_savedNoPhoto.id)', name: '#(customer_savedNoPhoto.name)', surname: '#(customer_savedNoPhoto.surname)', photoUrl: '#(customer_savedNoPhoto.photo)', userId: '#(datas.username)' }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Get the id of the customer previously saved with photo"],"line":85,"prefix":"*","index":33,"text":"def customer_savedPhoto = read('NewCustomerPhoto.json')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":87,"prefix":"Given","index":34,"text":"path 'graphql'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"And","index":35,"text":"header Authorization = signIn.response.tokenType + ' ' + signIn.response.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"And","index":36,"text":"request { query: '#(queryCustomerReadModel)', variables: '#(customer_savedPhoto)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"When","index":37,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":91,"prefix":"Then","index":38,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":93,"prefix":"*","index":39,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check that the datas of the customer are the same as we saved and it has the Id of the user who created it, in this case, the same as it's signed","####  -- FAIL --  * match response.data.CustomerReadModel == {id: '#(customer_savedPhoto.id)', name: '#(customer_savedPhoto.name)', surname: '#(customer_savedPhoto.surname)', photoUrl: '#(customer_savedPhoto.photo)', userId: '#(datas.username)' }","### Save a new customer with incomplete mandatory datas"],"line":98,"prefix":"*","index":40,"text":"def NewCustomerIncomplete = read('NewCustomerIncomplete.json')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":100,"prefix":"Given","index":41,"text":"path 'graphql'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":101,"prefix":"And","index":42,"text":"header Authorization = signIn.response.tokenType + ' ' + signIn.response.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":102,"prefix":"And","index":43,"text":"request { query: '#(querySave)', variables: '#(NewCustomerIncomplete)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":103,"prefix":"When","index":44,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":104,"prefix":"Then","index":45,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":107,"prefix":"*","index":46,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# It should fail"],"line":109,"prefix":"*","index":47,"text":"match response.errors != '#notpresent'"}}],"line":10,"description":"","durationMillis":692.9047,"failed":true,"error":"status code was: 400, expected: 200, response time in milliseconds: 414, url: https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in, response: \n{\"__type\":\"UserNotFoundException\",\"message\":\"User does not exist.\"}\nclasspath:examples\/users\/signin.feature:21\nclasspath:examples\/users\/TestUserNoAdminSaveCust.feature:16","executorName":"main","name":"Querys for an user not admin","startTime":1621292562296,"refId":"[1:10]","endTime":1621292563134,"exampleIndex":-1}],"callDepth":0,"name":"Test the API for an user not admin in the environment set from the java class","description":"","resultDate":"2021-05-18 01:02:43 a.Â m.","durationMillis":692.9047,"passedCount":0}