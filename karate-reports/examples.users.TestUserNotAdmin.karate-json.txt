{"failedCount":12,"prefixedPath":"classpath:examples\/users\/TestUserNotAdmin.feature","packageQualifiedName":"examples.users.TestUserNotAdmin","loopIndex":-1,"relativePath":"examples\/users\/TestUserNotAdmin.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":1277100,"millis":1.2771,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:47.882 karate.env system property was: prod \n"},{"result":{"nanos":7089800,"millis":7.0898,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":34500,"millis":0.0345,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":6843700,"millis":6.8437,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":989700,"millis":0.9897,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":929600,"millis":0.9296,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":804400,"millis":0.8044,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":40694300,"millis":40.6943,"status":"passed"},"step":{"endLine":32,"line":24,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="},"stepLog":"13:54:47.954 karate.env system property was: prod \n"},{"result":{"nanos":5417400,"millis":5.4174,"status":"passed"},"step":{"line":33,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":11029900,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","millis":11.0299,"status":"failed"},"step":{"line":34,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.014 classpath:examples\/users\/TestUserNotAdmin.feature:34\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":46,"description":"","durationMillis":75.1104,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","executorName":"main","name":"Create new Customers","startTime":1621425287953,"refId":"[1.1:46]","endTime":1621425288014,"exampleData":{"id":"cust0","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":0},{"sectionIndex":0,"stepResults":[{"result":{"nanos":1277100,"millis":1.2771,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:47.882 karate.env system property was: prod \n"},{"result":{"nanos":7089800,"millis":7.0898,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":34500,"millis":0.0345,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":6843700,"millis":6.8437,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":989700,"millis":0.9897,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":929600,"millis":0.9296,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":804400,"millis":0.8044,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":566300,"millis":0.5663,"status":"passed"},"step":{"endLine":32,"line":24,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="},"stepLog":"13:54:48.034 karate.env system property was: prod \n"},{"result":{"nanos":168300,"millis":0.1683,"status":"passed"},"step":{"line":33,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":737600,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","millis":0.7376,"status":"failed"},"step":{"line":34,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.037 classpath:examples\/users\/TestUserNotAdmin.feature:34\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":46,"description":"","durationMillis":19.441,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","executorName":"main","name":"Create new Customers","startTime":1621425288033,"refId":"[1.2:46]","endTime":1621425288037,"exampleData":{"id":"cust1","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":1},{"sectionIndex":0,"stepResults":[{"result":{"nanos":1277100,"millis":1.2771,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:47.882 karate.env system property was: prod \n"},{"result":{"nanos":7089800,"millis":7.0898,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":34500,"millis":0.0345,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":6843700,"millis":6.8437,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":989700,"millis":0.9897,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":929600,"millis":0.9296,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":804400,"millis":0.8044,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":811800,"millis":0.8118,"status":"passed"},"step":{"endLine":32,"line":24,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="},"stepLog":"13:54:48.049 karate.env system property was: prod \n"},{"result":{"nanos":298600,"millis":0.2986,"status":"passed"},"step":{"line":33,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":1428300,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","millis":1.4283,"status":"failed"},"step":{"line":34,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.053 classpath:examples\/users\/TestUserNotAdmin.feature:34\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":46,"description":"","durationMillis":20.5075,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","executorName":"main","name":"Create new Customers","startTime":1621425288048,"refId":"[1.3:46]","endTime":1621425288053,"exampleData":{"id":"cust2","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":2},{"sectionIndex":0,"stepResults":[{"result":{"nanos":1277100,"millis":1.2771,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:47.882 karate.env system property was: prod \n"},{"result":{"nanos":7089800,"millis":7.0898,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":34500,"millis":0.0345,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":6843700,"millis":6.8437,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":989700,"millis":0.9897,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":929600,"millis":0.9296,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":804400,"millis":0.8044,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":479100,"millis":0.4791,"status":"passed"},"step":{"endLine":32,"line":24,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="},"stepLog":"13:54:48.065 karate.env system property was: prod \n"},{"result":{"nanos":138400,"millis":0.1384,"status":"passed"},"step":{"line":33,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":785100,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","millis":0.7851,"status":"failed"},"step":{"line":34,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.067 classpath:examples\/users\/TestUserNotAdmin.feature:34\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":46,"description":"","durationMillis":19.3714,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","executorName":"main","name":"Create new Customers","startTime":1621425288064,"refId":"[1.4:46]","endTime":1621425288067,"exampleData":{"id":"cust3","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":3},{"sectionIndex":0,"stepResults":[{"result":{"nanos":1277100,"millis":1.2771,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:47.882 karate.env system property was: prod \n"},{"result":{"nanos":7089800,"millis":7.0898,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":34500,"millis":0.0345,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":6843700,"millis":6.8437,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":989700,"millis":0.9897,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":929600,"millis":0.9296,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":804400,"millis":0.8044,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":752700,"millis":0.7527,"status":"passed"},"step":{"endLine":32,"line":24,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="},"stepLog":"13:54:48.079 karate.env system property was: prod \n"},{"result":{"nanos":245900,"millis":0.2459,"status":"passed"},"step":{"line":33,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":1063800,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","millis":1.0638,"status":"failed"},"step":{"line":34,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.082 classpath:examples\/users\/TestUserNotAdmin.feature:34\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":46,"description":"","durationMillis":20.0312,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:34","executorName":"main","name":"Create new Customers","startTime":1621425288078,"refId":"[1.5:46]","endTime":1621425288082,"exampleData":{"id":"cust4","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":4},{"sectionIndex":1,"stepResults":[{"result":{"nanos":270100,"millis":0.2701,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:48.093 karate.env system property was: prod \n"},{"result":{"nanos":186900,"millis":0.1869,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":14700,"millis":0.0147,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":552400,"millis":0.5524,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":534100,"millis":0.5341,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":590900,"millis":0.5909,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":504300,"millis":0.5043,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":4582200,"millis":4.5822,"status":"passed"},"step":{"comments":["# This time, the photoUrl is filled"],"line":51,"prefix":"*","index":0,"text":"def new_customerPhoto = read('NewCustomerPhoto.json')"}},{"result":{"nanos":244400,"millis":0.2444,"status":"passed"},"step":{"line":53,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":1161200,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:54","millis":1.1612,"status":"failed"},"step":{"line":54,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.104 classpath:examples\/users\/TestUserNotAdmin.feature:54\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:54\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":55,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(new_customerPhoto)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":56,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":57,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":59,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# If the customer is saved, the response shouldn't contain a field \"error\""],"line":61,"prefix":"And","index":7,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":63,"prefix":"*","index":8,"text":"if (responseStatus != 200) karate.abort()"}}],"line":49,"description":"","durationMillis":8.6412,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:54","executorName":"main","name":"Create a new customer","startTime":1621425288092,"refId":"[2:49]","endTime":1621425288104,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":303200,"millis":0.3032,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:48.112 karate.env system property was: prod \n"},{"result":{"nanos":193200,"millis":0.1932,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":8500,"millis":0.0085,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":1146000,"millis":1.146,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":506200,"millis":0.5062,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":355000,"millis":0.355,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":321700,"millis":0.3217,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":1270500,"millis":1.2705,"status":"passed"},"step":{"comments":["#### Now, list the customers previously saved by id and check if datas are correct","# Get the id of the customer previously saved without photo"],"line":70,"prefix":"*","index":0,"text":"def customer_savedNoPhoto = read('NewCustomerNoPhoto.json')"}},{"result":{"nanos":219300,"millis":0.2193,"status":"passed"},"step":{"line":72,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":992200,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:73","millis":0.9922,"status":"failed"},"step":{"line":73,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.119 classpath:examples\/users\/TestUserNotAdmin.feature:73\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:73\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":74,"prefix":"And","index":3,"text":"request { query: '#(queryCustomerReadModel)', variables: '#(customer_savedNoPhoto.id)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":75,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":76,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check that the datas of the customer are the same as we saved and it has the Id of the user who created it, in this case, the same as it's signed"],"line":78,"prefix":"And","index":6,"text":"match response.data.CustomerReadModel == {id: '#(customer_savedNoPhoto.id)', name: '#(customer_savedNoPhoto.name)', surname: '#(customer_savedNoPhoto.surname)', photoUrl: '#(customer_savedNoPhoto.photo)', userId: '#(datas.username)' }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":80,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}}],"line":66,"description":"","durationMillis":5.3158,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:73","executorName":"main","name":"List all customers","startTime":1621425288111,"refId":"[3:66]","endTime":1621425288119,"exampleIndex":-1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":252900,"millis":0.2529,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:48.128 karate.env system property was: prod \n"},{"result":{"nanos":180700,"millis":0.1807,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":11000,"millis":0.011,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":389900,"millis":0.3899,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":270100,"millis":0.2701,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":214900,"millis":0.2149,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":323800,"millis":0.3238,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":499500,"millis":0.4995,"status":"passed"},"step":{"comments":["# Get the id of the customer previously saved with photo"],"line":84,"prefix":"*","index":0,"text":"def customer_savedPhoto = read('NewCustomerPhoto.json')"}},{"result":{"nanos":211500,"millis":0.2115,"status":"passed"},"step":{"line":86,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":1006100,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:87","millis":1.0061,"status":"failed"},"step":{"line":87,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.133 classpath:examples\/users\/TestUserNotAdmin.feature:87\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:87\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"And","index":3,"text":"request { query: '#(queryCustomerReadModel)', variables: '#(customer_savedPhoto)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":92,"prefix":"*","index":6,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check that the datas of the customer are the same as we saved and it has the Id of the user who created it, in this case, the same as it's signed"],"line":94,"prefix":"*","index":7,"text":"match response.data.CustomerReadModel == {id: '#(customer_savedPhoto.id)', name: '#(customer_savedPhoto.name)', surname: '#(customer_savedPhoto.surname)', photoUrl: '#(customer_savedPhoto.photo)', userId: '#(datas.username)' }"}}],"line":82,"description":"","durationMillis":3.3604,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:87","executorName":"main","name":"List a customer by id","startTime":1621425288127,"refId":"[4:82]","endTime":1621425288133,"exampleIndex":-1},{"sectionIndex":4,"stepResults":[{"result":{"nanos":185600,"millis":0.1856,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:48.141 karate.env system property was: prod \n"},{"result":{"nanos":116000,"millis":0.116,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":10700,"millis":0.0107,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":708100,"millis":0.7081,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":577100,"millis":0.5771,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":306900,"millis":0.3069,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":333400,"millis":0.3334,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":1021600,"millis":1.0216,"status":"passed"},"step":{"comments":["# Read the user from a json file"],"line":98,"prefix":"*","index":0,"text":"def NewCustomerIncomplete = read('NewCustomerIncomplete.json')"}},{"result":{"nanos":231300,"millis":0.2313,"status":"passed"},"step":{"line":100,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":872100,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:101","millis":0.8721,"status":"failed"},"step":{"line":101,"prefix":"And","index":2,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.147 classpath:examples\/users\/TestUserNotAdmin.feature:101\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:101\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":102,"prefix":"And","index":3,"text":"request { query: '#(querySave)', variables: '#(NewCustomerIncomplete)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":103,"prefix":"When","index":4,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":104,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":107,"prefix":"*","index":6,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# It should fail, so the response must return an error"],"line":109,"prefix":"*","index":7,"text":"match response.errors != '#notpresent'"}}],"line":96,"description":"","durationMillis":4.3628,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:101","executorName":"main","name":"Save a new customer with incomplete mandatory datas","startTime":1621425288140,"refId":"[5:96]","endTime":1621425288147,"exampleIndex":-1},{"sectionIndex":5,"stepResults":[{"result":{"nanos":249400,"millis":0.2494,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:48.153 karate.env system property was: prod \n"},{"result":{"nanos":173300,"millis":0.1733,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":13200,"millis":0.0132,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":460100,"millis":0.4601,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":380700,"millis":0.3807,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":270700,"millis":0.2707,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":250300,"millis":0.2503,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":188600,"millis":0.1886,"status":"passed"},"step":{"comments":["# List the customers to select one to delete"],"line":113,"prefix":"Given","index":0,"text":"path 'graphql'"}},{"result":{"nanos":7300400,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:114","millis":7.3004,"status":"failed"},"step":{"line":114,"prefix":"And","index":1,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.164 classpath:examples\/users\/TestUserNotAdmin.feature:114\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:114\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":115,"prefix":"And","index":2,"text":"request { query: '#(queryCustReadModels)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":116,"prefix":"When","index":3,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":117,"prefix":"Then","index":4,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":120,"prefix":"*","index":5,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check that the response doesn't contain a field \"error\""],"line":123,"prefix":"And","index":6,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":124,"prefix":"And","index":7,"text":"match response.data.CustomerReadModels contains {id: '#ignore', name: '#ignore', surname: '#ignore', photoUrl: '#ignore', userId: '#ignore' }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Save the body of the response and get the first to delete"],"line":127,"prefix":"*","index":8,"text":"def list_customers = response.data.CustomerReadModels"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":128,"prefix":"*","index":9,"text":"def customer_toDelete = list_customers[0]"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["#### Delete the customer"],"line":131,"prefix":"Given","index":10,"text":"path 'graphql'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":132,"prefix":"And","index":11,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":133,"prefix":"And","index":12,"text":"request { query: '#(queryDeleteCustomer)', variables: '#(customer_toDelete)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":134,"prefix":"When","index":13,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":135,"prefix":"Then","index":14,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":137,"prefix":"*","index":15,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":139,"prefix":"*","index":16,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check if the delete fails"],"line":141,"prefix":"And","index":17,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"endLine":149,"comments":["#### Check that the customer has been deleted consulting by the id"],"line":144,"prefix":"*","docString":"{ \n   \"id\": \"#(customer_toDelete.id)\"\n}","index":18,"text":"def id ="}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":150,"prefix":"Given","index":19,"text":"path 'graphql'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":151,"prefix":"And","index":20,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":152,"prefix":"And","index":21,"text":"request { query: '#(queryCustReadModel)', variables: '#(id)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":153,"prefix":"When","index":22,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":154,"prefix":"Then","index":23,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":157,"prefix":"*","index":24,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# The response shouldn't return any data"],"line":160,"prefix":"And","index":25,"text":"match response.data.CustomerReadModel != {id: '#(customer_toDelete.id)', name: '#ignore', surname: '#ignore', photoUrl: '#ignore', userId: '#ignore' }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":161,"prefix":"And","index":26,"text":"match response.errors == '#notpresent'"}}],"line":111,"description":"","durationMillis":9.2867,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:114","executorName":"main","name":"Delete customers","startTime":1621425288153,"refId":"[6:111]","endTime":1621425288164,"exampleIndex":-1},{"sectionIndex":6,"stepResults":[{"result":{"nanos":246400,"millis":0.2464,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:48.170 karate.env system property was: prod \n"},{"result":{"nanos":164200,"millis":0.1642,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":10000,"millis":0.01,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":428600,"millis":0.4286,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":268000,"millis":0.268,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":193600,"millis":0.1936,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":184000,"millis":0.184,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":912700,"millis":0.9127,"status":"passed"},"step":{"comments":["# Define the id of a customer to list"],"line":165,"prefix":"*","index":0,"text":"def customer_no_exist = read('CustomerReadModelNoExist.json')"}},{"result":{"nanos":841600,"millis":0.8416,"status":"passed"},"step":{"endLine":171,"line":166,"prefix":"*","docString":"{ \n    \"id\": \"#(customer_no_exist.id)\"\n}","index":1,"text":"def id ="}},{"result":{"nanos":163500,"millis":0.1635,"status":"passed"},"step":{"line":172,"prefix":"Given","index":2,"text":"path 'graphql'"}},{"result":{"nanos":679500,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:173","millis":0.6795,"status":"failed"},"step":{"line":173,"prefix":"And","index":3,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.175 classpath:examples\/users\/TestUserNotAdmin.feature:173\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:173\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":174,"prefix":"And","index":4,"text":"request { query: '#(queryCustReadModel)', variables: '#(id)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":175,"prefix":"When","index":5,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":176,"prefix":"Then","index":6,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":179,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check that the response contains an error"],"line":182,"prefix":"And","index":8,"text":"match response.errors != '#notpresent'"}}],"line":163,"description":"","durationMillis":4.0921,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:173","executorName":"main","name":"List a customers by Id that doesn't exist","startTime":1621425288169,"refId":"[7:163]","endTime":1621425288175,"exampleIndex":-1},{"sectionIndex":7,"stepResults":[{"result":{"nanos":191500,"millis":0.1915,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"13:54:48.181 karate.env system property was: prod \n"},{"result":{"nanos":138700,"millis":0.1387,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":10100,"millis":0.0101,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":398600,"millis":0.3986,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":282800,"millis":0.2828,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":257400,"millis":0.2574,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":234100,"millis":0.2341,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":968300,"millis":0.9683,"status":"passed"},"step":{"comments":["# Modify a customer created by the admin user"],"line":187,"prefix":"*","index":0,"text":"def customerToModify = read('newCustomerToModify.json')"}},{"result":{"nanos":1419700,"millis":1.4197,"status":"passed"},"step":{"comments":["# Update the name and the surname"],"line":190,"prefix":"*","index":1,"text":"set customerToModify.name = \"Name Updated again\""}},{"result":{"nanos":581300,"millis":0.5813,"status":"passed"},"step":{"line":191,"prefix":"*","index":2,"text":"set customerToModify.surname = \"Surname Updated again\""}},{"result":{"nanos":201700,"millis":0.2017,"status":"passed"},"step":{"comments":["#* set customerToModify.photoUrl = \"photoUpdated.jpg\""],"line":194,"prefix":"Given","index":3,"text":"path 'graphql'"}},{"result":{"nanos":803900,"errorMessage":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:195","millis":0.8039,"status":"failed"},"step":{"line":195,"prefix":"And","index":4,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"},"stepLog":"13:54:48.188 classpath:examples\/users\/TestUserNotAdmin.feature:195\nAnd header Authorization = adminToken.tokenType + ' ' + adminToken.idToken\n>>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:195\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":196,"prefix":"And","index":5,"text":"request { query: '#(querySave)', variables: '#(customerToModify)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":197,"prefix":"When","index":6,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":198,"prefix":"Then","index":7,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":200,"prefix":"*","index":8,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":203,"prefix":"*","index":9,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check if the response contains any error"],"line":206,"prefix":"*","index":10,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["### Check that the update was fine and the customer has the id of the last user who updated it"],"line":209,"prefix":"Given","index":11,"text":"path 'graphql'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":210,"prefix":"And","index":12,"text":"header Authorization = adminToken.tokenType + ' ' + adminToken.idToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":211,"prefix":"And","index":13,"text":"request { query: '#(queryCustReadModels)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":212,"prefix":"When","index":14,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":213,"prefix":"Then","index":15,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":216,"prefix":"*","index":16,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Check that the response doesn't contains a field \"error\""],"line":219,"prefix":"*","index":17,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":220,"prefix":"*","index":18,"text":"match response.data.CustomerReadModels contains {id: '#(customerToModify.id)', name: '#(customerToModify.name)', surname: '#(customerToModify.surname)', photoUrl: '#(customer_inList.photoUrl)', userId: '#(datas.username)' }"}}],"line":185,"description":"","durationMillis":5.4881,"failed":true,"error":">>>> js failed:\n01: adminToken.tokenType + ' ' + adminToken.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"adminToken\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:195","executorName":"main","name":"Users can update a customer","startTime":1621425288180,"refId":"[8:185]","endTime":1621425288188,"exampleIndex":-1}],"callDepth":0,"name":"Test the API for an user not admin in the environment set from the java class","description":"","resultDate":"2021-05-19 01:54:48 p. m.","durationMillis":195.0086,"passedCount":0}