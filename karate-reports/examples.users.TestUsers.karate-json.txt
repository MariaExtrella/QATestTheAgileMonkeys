{"failedCount":2,"prefixedPath":"classpath:examples\/users\/TestUsers.feature","packageQualifiedName":"examples.users.TestUsers","loopIndex":-1,"relativePath":"examples\/users\/TestUsers.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":1236100,"millis":1.2361,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:50:26.497 karate.env system property was: prod \n"},{"result":{"nanos":29600,"millis":0.0296,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":1,"text":"url httpUrl"}},{"result":{"nanos":29052700,"millis":29.0527,"status":"passed"},"step":{"comments":["# It is necessary to sign in the API as admin to create a new user","# Get the idToken for the admin user"],"line":15,"prefix":"*","index":0,"text":"def adminDatas = read('signinDatasUser.json')"}},{"result":{"nanos":761139400,"millis":761.1394,"status":"passed"},"step":{"comments":["# Call the feature to sign in the API with the JSON file that contains the admin's datas"],"line":18,"prefix":"*","index":1,"text":"def signIn = call read('signin.feature') adminDatas"},"callResults":[{"prefixedPath":"classpath:examples\/users\/signin.feature","loopIndex":-1,"callDepth":1,"description":"","resultDate":"2021-05-19 05:51:10 p.Â m.","durationMillis":737.9143,"callArg":{"password":"Admin.2020","clientId":"799hogucm363v55l7dk2n1l5u0","username":"admin@theagilemonkeys.com"},"failedCount":0,"packageQualifiedName":"examples.users.signin","relativePath":"examples\/users\/signin.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":19600,"millis":0.0196,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url httpUrl"}},{"result":{"nanos":2235100,"millis":2.2351,"status":"passed"},"step":{"endLine":14,"line":7,"prefix":"*","docString":"{\n  \t\t\"clientId\": \"#(clientId)\",\n        \"username\": \"#(username)\",\n  \t\t\"password\": \"#(password)\"\n\t}","index":0,"text":"def query ="}},{"result":{"nanos":4069700,"millis":4.0697,"status":"passed"},"step":{"line":15,"prefix":"*","index":1,"text":"print query"},"stepLog":"17:50:26.577 [print] {\n  \"clientId\": \"799hogucm363v55l7dk2n1l5u0\",\n  \"username\": \"admin@theagilemonkeys.com\",\n  \"password\": \"Admin.2020\"\n}\n \n"},{"result":{"nanos":5110800,"millis":5.1108,"status":"passed"},"step":{"line":17,"prefix":"Given","index":2,"text":"path '\/auth\/sign-in'"}},{"result":{"nanos":26600,"millis":0.0266,"status":"passed"},"step":{"line":18,"prefix":"And","index":3,"text":"request query"}},{"result":{"nanos":522800,"millis":0.5228,"status":"passed"},"step":{"line":19,"prefix":"And","index":4,"text":"header Content-Type = 'application\/json'"}},{"result":{"nanos":723402100,"millis":723.4021,"status":"passed"},"step":{"line":20,"prefix":"When","index":5,"text":"method post"},"stepLog":"17:50:26.786 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 104\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"password\":\"Admin.2020\",\"clientId\":\"799hogucm363v55l7dk2n1l5u0\",\"username\":\"admin@theagilemonkeys.com\"}\n\n17:50:27.305 response time in milliseconds: 502\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 4011\n1 < Connection: keep-alive\n1 < Date: Wed, 19 May 2021 15:50:27 GMT\n1 < x-amzn-RequestId: 110f8282-33d1-4eaa-81cb-0f4e943bd3e7\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: flUGiE9wjoEFY9Q=\n1 < X-Amzn-Trace-Id: Root=1-60a533c3-00d5e3a506707dbf77263ba5\n1 < X-Cache: Miss from cloudfront\n1 < Via: 1.1 ed24ed7fbec751651346c1accbcfe3e5.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD51-C2\n1 < X-Amz-Cf-Id: 3R5jtndvnToWkeGsd-lmpwAGzH_JBhP4p3khuv9LuAr0BIRLJnewtw==\n{\"expiresIn\":\"3600\",\"idToken\":\"eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZWIzZjJhNy0zZTllLTRhOTctYWNlOC1mZTQxYWQxMTg4OTAiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZXZlbnRfaWQiOiJmMTY5MTAxOC03NTM2LTQzMTQtOWM2MS05OWZkMjc1MTFkODgiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTYyMTQzOTQyNywiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLmV1LXdlc3QtMS5hbWF6b25hd3MuY29tXC9ldS13ZXN0LTFfbUh1ZUFyMlF1IiwiY29nbml0bzp1c2VybmFtZSI6ImFlYjNmMmE3LTNlOWUtNGE5Ny1hY2U4LWZlNDFhZDExODg5MCIsImV4cCI6MTYyMTQ0MzAyNywiY3VzdG9tOnJvbGUiOiJBZG1pbiIsImlhdCI6MTYyMTQzOTQyNywiZW1haWwiOiJhZG1pbkB0aGVhZ2lsZW1vbmtleXMuY29tIn0.cSN86vCc_S4jBgdJYc5MoaXHCQ6wgLjTHlpwaP7k68Q85v6XL-iR4NzpOzwDnAIMsmQ6xeLDi4uamHv51b_xtddRUcdCMy7dvpLAkNrqkCPpOyanb8vie1PVWULJ5vrJI9ZOI_BEzaMQ4ePtDoQ1ndZa6tZDtG5e17v-3ti3iis2vUZTZHi2gecDqJTkcx9GzRCg2Bfi0Uhf4E8Ha-e1KL7Z_g9cYVfYtBZn9MXdbvHJyxTwPSsilW2B40I_Ob_5NRukXTjfEg2XtQiLJjTMinncpHzONr3Qn2jEQpj6AvDGzfFZZPoT7wq_eLjIzcODaxGMYA4pVGH4GptqxwzgRw\",\"accessToken\":\"eyJraWQiOiJIcWFQSnUyR1YzN1F5TnBnVlIwSXRHRHJqQ3huZk41aEFvK1ZmZGNtNDBVPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJhZWIzZjJhNy0zZTllLTRhOTctYWNlOC1mZTQxYWQxMTg4OTAiLCJldmVudF9pZCI6ImYxNjkxMDE4LTc1MzYtNDMxNC05YzYxLTk5ZmQyNzUxMWQ4OCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2MjE0Mzk0MjcsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbVwvZXUtd2VzdC0xX21IdWVBcjJRdSIsImV4cCI6MTYyMTQ0MzAyNywiaWF0IjoxNjIxNDM5NDI3LCJqdGkiOiJiOTYxOTlkZi02OWVhLTQ5YzItYTRiOS0wY2E3YmU5ZDNmZTUiLCJjbGllbnRfaWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsInVzZXJuYW1lIjoiYWViM2YyYTctM2U5ZS00YTk3LWFjZTgtZmU0MWFkMTE4ODkwIn0.2V1cUSaGHLqIPgVnJSMcbqf5_NWEhkIICIcuNTteJ5Xd9KAYIF6CQ3PigEBFmyYaq6_n18APetWET898HMt-Zo_xwzuKRUzbVWfJQcNw6FU1Vr4qYIXRm4ArlYmxwcZ8lRCPHR5fzkKqA2jGHZFqHYE6KEEZ7It9jBdj9MlNMd5fSbXyoQ0t-r-IGF1J-oriYQh5a4tTYxoFMR0btv3jnbmQ6DrZDwLnl9AHUkM1ZBfhb-51-YnReRSdHH7bbmDv5rsjBmfrJ1EzMDp7rqeBW6Zu7Sy8itdkp5vZ4Yf4PO5Jl382lgMebTOn1ayeQippIbKNX_hU_uo15N-MZdx8Xg\",\"tokenType\":\"Bearer\",\"refreshToken\":\"eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.NyQ7dk9S1N3emlrh5f5KRMKXFhuIuXOX4oGemS6d2mNigHoYb9LX_7Mgsvj8rjE0Klow_FbgbbYvi9FZV4BggpQPEkK3N9lPtFOEt9dWsEkMXfxt8SmnQDbz8Fe_yazn3-6jQQBTfIA-VLnyvsFDJ5gtLYK3ACFC22dlrcyD0uPAY5PfILgjkKA6d3K9_kTPDPTCGd_2ytQ_f-JUlIlECHTRwItB5sTxYwHfOfTBflgrCWPKiPj_dc4zbqppvT-61ZuJvW6A1EyPkYVKQF2KTSFZq17jX-Kqwgo3qCpSzFrzNkGBThAlwNXOGzK6mKGAfVooqeqOHxuFqVRIvP0MxQ.VE4bfKlG12xw7CMY.6VyP_ayl-Vw00JeE35-fb5OWj5f1NDItxXrfrk8DJmJxRVB32R5zuN73G3_xCcTJ76tvjlImzqqTYMCCq64zkdGCUbm7-awoEWERx2Fv5b1Ddd3XBcLwWn9e6VBuyvYLZUfh-_r8FiGLpk85znM4xdHdikqLhjXWPw0rZswhqpLDTAVfq4QvnyksdROgUC7ckKClP932XExWBv0hRwPtNMbEBf5VnKPD0qDRCJCDmgjQSNVdhYBPNx3ANSpVdbPK1W9MrM4jpJnUWKYbGsecvPrzy1UdDRws4xvy-1olk58CdVeRcfJoNfNeZvT8W4rv38FG-cDZW59rQXyf8eJTkNvlu7qEVtTTLw4ekJR-gfMp1WD8FXxqCW2wWbMzoOhvTnUAI7y2NFQu3qxA59S4oqC-Qm4wKQx5As6PsnLa6lKQfakS92ZRi1XDBrBpcUq1tocq9uxaN6Yd6ePsWCWl6WMGFLSi6JTqZx_NIWCr5tb6o82LboOg3AF9-dEbbv6MJgxU8f_TSuObhrPPswNjpP8Mbpwh7T4Va88XYwsxy0bmPM2X-dOk4do4N0ZsRf8dc9N0-MO6L-00h5cE9vHQK-8qH3JR6mjOYsA2afBGjGy55H1T3QmtLa9gF9512vAMBXPaiOJ4x3-DLY-TpceORTOdD-aQQjej7HuKPXjPc137_U_H9D9ZtJ5Vkyl8ZYmeh1eJAXC4CX0bpuZso_Iqq7tcBtvtoxL2F1QrDeS-PSXcK81SfdjjBE75ROQlw6jwEhWmTgXESkjT2wQ06E9PyWTSgIZOYoYWCd2Jz_SDTdTQeCWeLfWVl8PcK-eeQHnvtEJ92KYaKtKTIFNx-jjpN5L1KsRK35JYlihJlKWkdyHYZlDLj_hOZlPMlvDsQqjgy-Rq51GdPa7nV9IZwKBYqUDqsgaTB22SPRM4tV51v3keI3UFxIGwfCKJJ9e54MCJ49wQFwJb7rNDb6k2HBGNu1xeaKQEeQgffIozyAvP0Rsknp54hYbh5awkEN-VkUnClyrVm5lzBrwvTVHjfizYLj-dO2qoyj53VppyDCj2e0JcoqodX_uoas2GphXxih5S6PVu-juYPfDq11VKgZGlfnTbxYmBUv5s1djeRVOS84z_Tzoj0qxjNXNrUWz0u3b07tuuRhcF_Wfe5kgQdBBIPymy299efe--LRu1nnzklrvp8uUAwyvFVJoJeWO2iXERadv9BZKaCNsrikuIcumZGX5S2uRu32ExFlVlpm3k0nbP-1_wie8nWphqv4SMsydUsq3bR-_J5ytC7nObVKPw4-9wkpMEBex5DpKg4S8vlMgjxJA6T7zQq-1bMzrg_mM.qq8Ux4fJuo0_QpnBOaU8Xg\"}\n"},{"result":{"nanos":73100,"millis":0.0731,"status":"passed"},"step":{"line":21,"prefix":"Then","index":6,"text":"status 200"}},{"result":{"nanos":1307800,"millis":1.3078,"status":"passed"},"step":{"comments":["#Get the idToken for the user"],"line":24,"prefix":"*","index":7,"text":"def tokenid = response.idToken"}},{"result":{"nanos":1146700,"millis":1.1467,"status":"passed"},"step":{"line":25,"prefix":"*","index":8,"text":"print tokenid"},"stepLog":"17:50:27.310 [print] eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZWIzZjJhNy0zZTllLTRhOTctYWNlOC1mZTQxYWQxMTg4OTAiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZXZlbnRfaWQiOiJmMTY5MTAxOC03NTM2LTQzMTQtOWM2MS05OWZkMjc1MTFkODgiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTYyMTQzOTQyNywiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLmV1LXdlc3QtMS5hbWF6b25hd3MuY29tXC9ldS13ZXN0LTFfbUh1ZUFyMlF1IiwiY29nbml0bzp1c2VybmFtZSI6ImFlYjNmMmE3LTNlOWUtNGE5Ny1hY2U4LWZlNDFhZDExODg5MCIsImV4cCI6MTYyMTQ0MzAyNywiY3VzdG9tOnJvbGUiOiJBZG1pbiIsImlhdCI6MTYyMTQzOTQyNywiZW1haWwiOiJhZG1pbkB0aGVhZ2lsZW1vbmtleXMuY29tIn0.cSN86vCc_S4jBgdJYc5MoaXHCQ6wgLjTHlpwaP7k68Q85v6XL-iR4NzpOzwDnAIMsmQ6xeLDi4uamHv51b_xtddRUcdCMy7dvpLAkNrqkCPpOyanb8vie1PVWULJ5vrJI9ZOI_BEzaMQ4ePtDoQ1ndZa6tZDtG5e17v-3ti3iis2vUZTZHi2gecDqJTkcx9GzRCg2Bfi0Uhf4E8Ha-e1KL7Z_g9cYVfYtBZn9MXdbvHJyxTwPSsilW2B40I_Ob_5NRukXTjfEg2XtQiLJjTMinncpHzONr3Qn2jEQpj6AvDGzfFZZPoT7wq_eLjIzcODaxGMYA4pVGH4GptqxwzgRw \n"}],"executorName":"main","line":6,"name":"obtain a token for the admin user","description":"","durationMillis":737.9143,"startTime":1621439426571,"failed":false,"refId":"[1:6]","endTime":1621439427310,"exampleIndex":-1}],"name":"Get a token for the user to sign in the API","passedCount":1}]},{"result":{"nanos":2549900,"millis":2.5499,"status":"passed"},"step":{"line":19,"prefix":"*","index":2,"text":"print signIn.response"},"stepLog":"17:50:27.315 [print] {\n  \"expiresIn\": \"3600\",\n  \"idToken\": \"eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZWIzZjJhNy0zZTllLTRhOTctYWNlOC1mZTQxYWQxMTg4OTAiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZXZlbnRfaWQiOiJmMTY5MTAxOC03NTM2LTQzMTQtOWM2MS05OWZkMjc1MTFkODgiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTYyMTQzOTQyNywiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLmV1LXdlc3QtMS5hbWF6b25hd3MuY29tXC9ldS13ZXN0LTFfbUh1ZUFyMlF1IiwiY29nbml0bzp1c2VybmFtZSI6ImFlYjNmMmE3LTNlOWUtNGE5Ny1hY2U4LWZlNDFhZDExODg5MCIsImV4cCI6MTYyMTQ0MzAyNywiY3VzdG9tOnJvbGUiOiJBZG1pbiIsImlhdCI6MTYyMTQzOTQyNywiZW1haWwiOiJhZG1pbkB0aGVhZ2lsZW1vbmtleXMuY29tIn0.cSN86vCc_S4jBgdJYc5MoaXHCQ6wgLjTHlpwaP7k68Q85v6XL-iR4NzpOzwDnAIMsmQ6xeLDi4uamHv51b_xtddRUcdCMy7dvpLAkNrqkCPpOyanb8vie1PVWULJ5vrJI9ZOI_BEzaMQ4ePtDoQ1ndZa6tZDtG5e17v-3ti3iis2vUZTZHi2gecDqJTkcx9GzRCg2Bfi0Uhf4E8Ha-e1KL7Z_g9cYVfYtBZn9MXdbvHJyxTwPSsilW2B40I_Ob_5NRukXTjfEg2XtQiLJjTMinncpHzONr3Qn2jEQpj6AvDGzfFZZPoT7wq_eLjIzcODaxGMYA4pVGH4GptqxwzgRw\",\n  \"accessToken\": \"eyJraWQiOiJIcWFQSnUyR1YzN1F5TnBnVlIwSXRHRHJqQ3huZk41aEFvK1ZmZGNtNDBVPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJhZWIzZjJhNy0zZTllLTRhOTctYWNlOC1mZTQxYWQxMTg4OTAiLCJldmVudF9pZCI6ImYxNjkxMDE4LTc1MzYtNDMxNC05YzYxLTk5ZmQyNzUxMWQ4OCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2MjE0Mzk0MjcsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbVwvZXUtd2VzdC0xX21IdWVBcjJRdSIsImV4cCI6MTYyMTQ0MzAyNywiaWF0IjoxNjIxNDM5NDI3LCJqdGkiOiJiOTYxOTlkZi02OWVhLTQ5YzItYTRiOS0wY2E3YmU5ZDNmZTUiLCJjbGllbnRfaWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsInVzZXJuYW1lIjoiYWViM2YyYTctM2U5ZS00YTk3LWFjZTgtZmU0MWFkMTE4ODkwIn0.2V1cUSaGHLqIPgVnJSMcbqf5_NWEhkIICIcuNTteJ5Xd9KAYIF6CQ3PigEBFmyYaq6_n18APetWET898HMt-Zo_xwzuKRUzbVWfJQcNw6FU1Vr4qYIXRm4ArlYmxwcZ8lRCPHR5fzkKqA2jGHZFqHYE6KEEZ7It9jBdj9MlNMd5fSbXyoQ0t-r-IGF1J-oriYQh5a4tTYxoFMR0btv3jnbmQ6DrZDwLnl9AHUkM1ZBfhb-51-YnReRSdHH7bbmDv5rsjBmfrJ1EzMDp7rqeBW6Zu7Sy8itdkp5vZ4Yf4PO5Jl382lgMebTOn1ayeQippIbKNX_hU_uo15N-MZdx8Xg\",\n  \"tokenType\": \"Bearer\",\n  \"refreshToken\": \"eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.NyQ7dk9S1N3emlrh5f5KRMKXFhuIuXOX4oGemS6d2mNigHoYb9LX_7Mgsvj8rjE0Klow_FbgbbYvi9FZV4BggpQPEkK3N9lPtFOEt9dWsEkMXfxt8SmnQDbz8Fe_yazn3-6jQQBTfIA-VLnyvsFDJ5gtLYK3ACFC22dlrcyD0uPAY5PfILgjkKA6d3K9_kTPDPTCGd_2ytQ_f-JUlIlECHTRwItB5sTxYwHfOfTBflgrCWPKiPj_dc4zbqppvT-61ZuJvW6A1EyPkYVKQF2KTSFZq17jX-Kqwgo3qCpSzFrzNkGBThAlwNXOGzK6mKGAfVooqeqOHxuFqVRIvP0MxQ.VE4bfKlG12xw7CMY.6VyP_ayl-Vw00JeE35-fb5OWj5f1NDItxXrfrk8DJmJxRVB32R5zuN73G3_xCcTJ76tvjlImzqqTYMCCq64zkdGCUbm7-awoEWERx2Fv5b1Ddd3XBcLwWn9e6VBuyvYLZUfh-_r8FiGLpk85znM4xdHdikqLhjXWPw0rZswhqpLDTAVfq4QvnyksdROgUC7ckKClP932XExWBv0hRwPtNMbEBf5VnKPD0qDRCJCDmgjQSNVdhYBPNx3ANSpVdbPK1W9MrM4jpJnUWKYbGsecvPrzy1UdDRws4xvy-1olk58CdVeRcfJoNfNeZvT8W4rv38FG-cDZW59rQXyf8eJTkNvlu7qEVtTTLw4ekJR-gfMp1WD8FXxqCW2wWbMzoOhvTnUAI7y2NFQu3qxA59S4oqC-Qm4wKQx5As6PsnLa6lKQfakS92ZRi1XDBrBpcUq1tocq9uxaN6Yd6ePsWCWl6WMGFLSi6JTqZx_NIWCr5tb6o82LboOg3AF9-dEbbv6MJgxU8f_TSuObhrPPswNjpP8Mbpwh7T4Va88XYwsxy0bmPM2X-dOk4do4N0ZsRf8dc9N0-MO6L-00h5cE9vHQK-8qH3JR6mjOYsA2afBGjGy55H1T3QmtLa9gF9512vAMBXPaiOJ4x3-DLY-TpceORTOdD-aQQjej7HuKPXjPc137_U_H9D9ZtJ5Vkyl8ZYmeh1eJAXC4CX0bpuZso_Iqq7tcBtvtoxL2F1QrDeS-PSXcK81SfdjjBE75ROQlw6jwEhWmTgXESkjT2wQ06E9PyWTSgIZOYoYWCd2Jz_SDTdTQeCWeLfWVl8PcK-eeQHnvtEJ92KYaKtKTIFNx-jjpN5L1KsRK35JYlihJlKWkdyHYZlDLj_hOZlPMlvDsQqjgy-Rq51GdPa7nV9IZwKBYqUDqsgaTB22SPRM4tV51v3keI3UFxIGwfCKJJ9e54MCJ49wQFwJb7rNDb6k2HBGNu1xeaKQEeQgffIozyAvP0Rsknp54hYbh5awkEN-VkUnClyrVm5lzBrwvTVHjfizYLj-dO2qoyj53VppyDCj2e0JcoqodX_uoas2GphXxih5S6PVu-juYPfDq11VKgZGlfnTbxYmBUv5s1djeRVOS84z_Tzoj0qxjNXNrUWz0u3b07tuuRhcF_Wfe5kgQdBBIPymy299efe--LRu1nnzklrvp8uUAwyvFVJoJeWO2iXERadv9BZKaCNsrikuIcumZGX5S2uRu32ExFlVlpm3k0nbP-1_wie8nWphqv4SMsydUsq3bR-_J5ytC7nObVKPw4-9wkpMEBex5DpKg4S8vlMgjxJA6T7zQq-1bMzrg_mM.qq8Ux4fJuo0_QpnBOaU8Xg\"\n}\n \n"},{"result":{"nanos":894200,"millis":0.8942,"status":"passed"},"step":{"line":20,"prefix":"*","index":3,"text":"def adminToken = signIn.response"}},{"result":{"nanos":4026775400,"millis":4026.7754,"status":"passed"},"step":{"comments":["# Test the admin user","# The token for the admin user is the input parameter for the callable feature where are defined the steps of the tests","##    * def testAdmin = call read('TestUserAdmin.feature') adminToken"],"line":25,"prefix":"*","index":4,"text":"wait(4000)"}}],"executorName":"main","line":12,"name":"Test if the API met the acceptance criteria for an admin user","description":"","durationMillis":4821.6773,"startTime":1621439426386,"failed":false,"refId":"[1:12]","endTime":1621439431343,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":368000,"millis":0.368,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:50:31.365 karate.env system property was: prod \n"},{"result":{"nanos":11700,"millis":0.0117,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":1,"text":"url httpUrl"}},{"result":{"nanos":1343000,"millis":1.343,"status":"passed"},"step":{"comments":["# Get the idToken for the not admin user"],"line":29,"prefix":"*","index":0,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"}},{"result":{"nanos":422984200,"millis":422.9842,"status":"passed"},"step":{"comments":["# Call the feature to sign in the API with the JSON file that contains the user datas"],"line":32,"prefix":"*","index":1,"text":"def signIn = call read('signin.feature') userDatas"},"callResults":[{"prefixedPath":"classpath:examples\/users\/signin.feature","loopIndex":-1,"callDepth":1,"description":"","resultDate":"2021-05-19 05:51:10 p.Â m.","durationMillis":412.6044,"callArg":{"password":"Password_2","clientId":"799hogucm363v55l7dk2n1l5u0","username":"userNotAdmin@test.com"},"failedCount":0,"packageQualifiedName":"examples.users.signin","relativePath":"examples\/users\/signin.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":18400,"millis":0.0184,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url httpUrl"}},{"result":{"nanos":1418800,"millis":1.4188,"status":"passed"},"step":{"endLine":14,"line":7,"prefix":"*","docString":"{\n  \t\t\"clientId\": \"#(clientId)\",\n        \"username\": \"#(username)\",\n  \t\t\"password\": \"#(password)\"\n\t}","index":0,"text":"def query ="}},{"result":{"nanos":1123900,"millis":1.1239,"status":"passed"},"step":{"line":15,"prefix":"*","index":1,"text":"print query"},"stepLog":"17:50:31.379 [print] {\n  \"clientId\": \"799hogucm363v55l7dk2n1l5u0\",\n  \"username\": \"userNotAdmin@test.com\",\n  \"password\": \"Password_2\"\n}\n \n"},{"result":{"nanos":398200,"millis":0.3982,"status":"passed"},"step":{"line":17,"prefix":"Given","index":2,"text":"path '\/auth\/sign-in'"}},{"result":{"nanos":8600,"millis":0.0086,"status":"passed"},"step":{"line":18,"prefix":"And","index":3,"text":"request query"}},{"result":{"nanos":267700,"millis":0.2677,"status":"passed"},"step":{"line":19,"prefix":"And","index":4,"text":"header Content-Type = 'application\/json'"}},{"result":{"nanos":408456100,"millis":408.4561,"status":"passed"},"step":{"line":20,"prefix":"When","index":5,"text":"method post"},"stepLog":"17:50:31.382 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/auth\/sign-in\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 100\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"password\":\"Password_2\",\"clientId\":\"799hogucm363v55l7dk2n1l5u0\",\"username\":\"userNotAdmin@test.com\"}\n\n17:50:31.787 response time in milliseconds: 403\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 4003\n1 < Connection: keep-alive\n1 < Date: Wed, 19 May 2021 15:50:32 GMT\n1 < x-amzn-RequestId: cda02558-127f-4819-85e8-9183536eebc8\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: flUHPFs-DoEF1xQ=\n1 < X-Amzn-Trace-Id: Root=1-60a533c7-5cbf53c660b64647677366bb\n1 < X-Cache: Miss from cloudfront\n1 < Via: 1.1 83f9969abb9f43b17789799503ae532d.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD51-C2\n1 < X-Amz-Cf-Id: 6pbiAT3YML4VxB1TRnAdP-QclbXNIJNLELd1UBxEjO3536a-Lvia2Q==\n{\"expiresIn\":\"3600\",\"idToken\":\"eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\",\"accessToken\":\"eyJraWQiOiJIcWFQSnUyR1YzN1F5TnBnVlIwSXRHRHJqQ3huZk41aEFvK1ZmZGNtNDBVPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2MjE0Mzk0MzIsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbVwvZXUtd2VzdC0xX21IdWVBcjJRdSIsImV4cCI6MTYyMTQ0MzAzMiwiaWF0IjoxNjIxNDM5NDMyLCJqdGkiOiIwMWY3OWY5Zi1kZmUxLTQyNDYtOWEyYS1lZTA0MmQyMjM4ZGMiLCJjbGllbnRfaWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsInVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4In0.X4wBb9nxrIdt8z8ZOnTUBKhY_yCRqWe3B-zQrZolNUY_yP_wQUz3RMeEuR2D41d61EYLDcaVpQkXGYdIv7y8d3Ld-_6zyBwWBL6j0hkrGyjWpL72eqzlUMWV-yC9zPmwTfxDwIFE4FI0xgC1S_hHGxvWDc39Eu7i02spVpkXl9GETzBtqax3nPIguNXfXD4--Jsut5hcDu2gRJUTO_LwGo2WTG0vPP2XIslS2q8hDsBRSqF8_fUc77Wvt6iGRmiyc2WwwChGKM5ijSMSDbFyywvn_72-wOzPGLmNnclaiF0VjTNAQ37B5fMoTOcXq1CFoxYv5s0Di1QUqf4qBtUssQ\",\"tokenType\":\"Bearer\",\"refreshToken\":\"eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.Iyw1DAY_ChN8kJONvzCb2ZRQTMx6qlp1ivvCmJm-LpveOYeJ0yVW1zsba8_LDPiIP_LOiqhy06t3U4X9_Cn4CNzzrtXGsPVHOEB6xjdWtyKuiCUsugyizn7e3pxBd_uPyTXsyetYag9dYew-clf44DY_qf281wgdiiqrOyux2EDKsoxtL4fD9kwh9KeTdBnm9lR9mW_zICE-8xGyD_gP7YKKIV8dpPAjq5VjlYA8iLgI9It0-TFa87avzV1iYesg5snf0_olrhT5Dg1SzTJfGQzM9SWwkKrBgyOscO8sOTVRL6SWRm_ev0m-8OZzebBhVd15_BIO43zofUQhoqFmvQ.hu4Qbc2yGZjakLd2.6ZwhZdWCMkuj40vegu3s8TtIoDssaT9Bmp4I-rsQAaQUcnueSErDG2IB66wufrVdpfR8f1veDBLUOx7EjNuIqD9tKyzaA7m9SqmSRcPTMzLMdh8s7nszrQ-mV0ZZUzpIfIptVbs5b6cJU7KWZNAcnZrt0Go81pfTSZ_4BK_xZZqAtzVSAY1sLAZHsyK2xXo4uANpMkGhvYHZmb7jtxm3YrJ0BUGpURuXJ8qrp4d5zc3DBizTqC2NpN7mbeuVWWXvupKbR3lJeycqMH8JxUjPi1uHL_7iWtb4-YjuI3XPpntswPJlZqohaQGAhXlloTBHE39XmYy8Lh2peQmjtIEVz9fyB9_vYLPf7dIjT2Gm8HlSF4KlZlQjb8v5K4AebN9DwzPcx2Nw-KkkHnmaFGNTES3rktg3738fvbjywjmqltdARFM5sn3knousN1etMY-LinxXMWMW_1uqoM8UdJvYTersSQwNlF-ziIRo8FOKQI7nYcu-tcDHJI9DP2Hpt_REi-_yQsQNisb6wTw5h0Z7OSe3ZFq-k2_psu3zFMD3l204hW6lnw3o5jKPUmAwDaAsyMFc5iQGkUdV0FgQbPwUJ9JoD1jEAhqCpJ5q9gGsYjy_fz_KgqSENchlEKlAFb2LTvT-LPoQRKzk4BAfG1BqKp7Lb98nMo1zYN4QCO_cDLHaz4nr9-TS1rMFC7ZKAGeRDeorea3O7dkeBibBnX4rSG2oAN2_eWtUS9WGqzFZ8lAthzVdoywLrERqdHtFH62OZN6e5Nkz1iLjxs6IPwp2g9FWC3_fqBMUVv2mg9jL75Fe7brGTC7kx0m45NT94q57nHie6rLoVl64RGGQmXeG79gy4qu1Oq9TQvZG8Gw3B3tK7AGHrGEhQb699XpnTdztgny1P-G8-S0mhIFzMZZ9biQl6AFcKCHl6LsEjORlnwTbgnRWvZ6g3g3ujr1qIYoiSBW_2fr6zLUL79wGSJNEAFyo-Bpu7RwonGQgtQrBUfXD4PTc10WVqVXPtm_n33ciyk3OZShsSyMwrd-NuXUHXwS7s2mxRjXoUV1DnydW-bXro5MSRA22KnfqObfQvavY1pjKLPq2WSdur3c1GetlaeXn542kHvWaXIq_8CclshWtzs38H3rP9vBjlFi0T41a0Rg6iUNoanDjteWeIO4i_xHAhBwsqP5syiNmhSuwQpJ3uN6HCYuk16ELaKrsPvQhSVxIes5d8kHvm4gPfk7xAmqqHjUmUzxkMxoWb6EMU_dAqKjTkpmt3WnpucvzTrgrEnp0O8jYRGzZ9SK0bCIPoDSW3BP3qz3CwgIXMLo2IcPkxfxxzKaYqkSmiE09mhA.vB61f6i6cC9jkengYROUvQ\"}\n"},{"result":{"nanos":10400,"millis":0.0104,"status":"passed"},"step":{"line":21,"prefix":"Then","index":6,"text":"status 200"}},{"result":{"nanos":418800,"millis":0.4188,"status":"passed"},"step":{"comments":["#Get the idToken for the user"],"line":24,"prefix":"*","index":7,"text":"def tokenid = response.idToken"}},{"result":{"nanos":483500,"millis":0.4835,"status":"passed"},"step":{"line":25,"prefix":"*","index":8,"text":"print tokenid"},"stepLog":"17:50:31.790 [print] eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg \n"}],"executorName":"main","line":6,"name":"obtain a token for the admin user","description":"","durationMillis":412.6044,"startTime":1621439431377,"failed":false,"refId":"[1:6]","endTime":1621439431790,"exampleIndex":-1}],"name":"Get a token for the user to sign in the API","passedCount":1}]},{"result":{"nanos":1518900,"millis":1.5189,"status":"passed"},"step":{"line":33,"prefix":"*","index":2,"text":"print signIn.response"},"stepLog":"17:50:31.792 [print] {\n  \"expiresIn\": \"3600\",\n  \"idToken\": \"eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\",\n  \"accessToken\": \"eyJraWQiOiJIcWFQSnUyR1YzN1F5TnBnVlIwSXRHRHJqQ3huZk41aEFvK1ZmZGNtNDBVPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2MjE0Mzk0MzIsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbVwvZXUtd2VzdC0xX21IdWVBcjJRdSIsImV4cCI6MTYyMTQ0MzAzMiwiaWF0IjoxNjIxNDM5NDMyLCJqdGkiOiIwMWY3OWY5Zi1kZmUxLTQyNDYtOWEyYS1lZTA0MmQyMjM4ZGMiLCJjbGllbnRfaWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsInVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4In0.X4wBb9nxrIdt8z8ZOnTUBKhY_yCRqWe3B-zQrZolNUY_yP_wQUz3RMeEuR2D41d61EYLDcaVpQkXGYdIv7y8d3Ld-_6zyBwWBL6j0hkrGyjWpL72eqzlUMWV-yC9zPmwTfxDwIFE4FI0xgC1S_hHGxvWDc39Eu7i02spVpkXl9GETzBtqax3nPIguNXfXD4--Jsut5hcDu2gRJUTO_LwGo2WTG0vPP2XIslS2q8hDsBRSqF8_fUc77Wvt6iGRmiyc2WwwChGKM5ijSMSDbFyywvn_72-wOzPGLmNnclaiF0VjTNAQ37B5fMoTOcXq1CFoxYv5s0Di1QUqf4qBtUssQ\",\n  \"tokenType\": \"Bearer\",\n  \"refreshToken\": \"eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.Iyw1DAY_ChN8kJONvzCb2ZRQTMx6qlp1ivvCmJm-LpveOYeJ0yVW1zsba8_LDPiIP_LOiqhy06t3U4X9_Cn4CNzzrtXGsPVHOEB6xjdWtyKuiCUsugyizn7e3pxBd_uPyTXsyetYag9dYew-clf44DY_qf281wgdiiqrOyux2EDKsoxtL4fD9kwh9KeTdBnm9lR9mW_zICE-8xGyD_gP7YKKIV8dpPAjq5VjlYA8iLgI9It0-TFa87avzV1iYesg5snf0_olrhT5Dg1SzTJfGQzM9SWwkKrBgyOscO8sOTVRL6SWRm_ev0m-8OZzebBhVd15_BIO43zofUQhoqFmvQ.hu4Qbc2yGZjakLd2.6ZwhZdWCMkuj40vegu3s8TtIoDssaT9Bmp4I-rsQAaQUcnueSErDG2IB66wufrVdpfR8f1veDBLUOx7EjNuIqD9tKyzaA7m9SqmSRcPTMzLMdh8s7nszrQ-mV0ZZUzpIfIptVbs5b6cJU7KWZNAcnZrt0Go81pfTSZ_4BK_xZZqAtzVSAY1sLAZHsyK2xXo4uANpMkGhvYHZmb7jtxm3YrJ0BUGpURuXJ8qrp4d5zc3DBizTqC2NpN7mbeuVWWXvupKbR3lJeycqMH8JxUjPi1uHL_7iWtb4-YjuI3XPpntswPJlZqohaQGAhXlloTBHE39XmYy8Lh2peQmjtIEVz9fyB9_vYLPf7dIjT2Gm8HlSF4KlZlQjb8v5K4AebN9DwzPcx2Nw-KkkHnmaFGNTES3rktg3738fvbjywjmqltdARFM5sn3knousN1etMY-LinxXMWMW_1uqoM8UdJvYTersSQwNlF-ziIRo8FOKQI7nYcu-tcDHJI9DP2Hpt_REi-_yQsQNisb6wTw5h0Z7OSe3ZFq-k2_psu3zFMD3l204hW6lnw3o5jKPUmAwDaAsyMFc5iQGkUdV0FgQbPwUJ9JoD1jEAhqCpJ5q9gGsYjy_fz_KgqSENchlEKlAFb2LTvT-LPoQRKzk4BAfG1BqKp7Lb98nMo1zYN4QCO_cDLHaz4nr9-TS1rMFC7ZKAGeRDeorea3O7dkeBibBnX4rSG2oAN2_eWtUS9WGqzFZ8lAthzVdoywLrERqdHtFH62OZN6e5Nkz1iLjxs6IPwp2g9FWC3_fqBMUVv2mg9jL75Fe7brGTC7kx0m45NT94q57nHie6rLoVl64RGGQmXeG79gy4qu1Oq9TQvZG8Gw3B3tK7AGHrGEhQb699XpnTdztgny1P-G8-S0mhIFzMZZ9biQl6AFcKCHl6LsEjORlnwTbgnRWvZ6g3g3ujr1qIYoiSBW_2fr6zLUL79wGSJNEAFyo-Bpu7RwonGQgtQrBUfXD4PTc10WVqVXPtm_n33ciyk3OZShsSyMwrd-NuXUHXwS7s2mxRjXoUV1DnydW-bXro5MSRA22KnfqObfQvavY1pjKLPq2WSdur3c1GetlaeXn542kHvWaXIq_8CclshWtzs38H3rP9vBjlFi0T41a0Rg6iUNoanDjteWeIO4i_xHAhBwsqP5syiNmhSuwQpJ3uN6HCYuk16ELaKrsPvQhSVxIes5d8kHvm4gPfk7xAmqqHjUmUzxkMxoWb6EMU_dAqKjTkpmt3WnpucvzTrgrEnp0O8jYRGzZ9SK0bCIPoDSW3BP3qz3CwgIXMLo2IcPkxfxxzKaYqkSmiE09mhA.vB61f6i6cC9jkengYROUvQ\"\n}\n \n"},{"result":{"nanos":318600,"millis":0.3186,"status":"passed"},"step":{"line":34,"prefix":"*","index":3,"text":"def userToken = signIn.response"}},{"result":{"nanos":38297240600,"errorMessage":"ReferenceError: \"datas\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:87\nmatch failed: NOT_EQUALS\n  $ | is equal (STRING:STRING)\n  '#notpresent'\n  '#notpresent'\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:104\nmatch failed: NOT_EQUALS\n  $ | actual path does not exist (STRING:MAP)\n  '#notpresent'\n  {\"id\":\"cust4\",\"name\":\"#ignore\",\"surname\":\"#ignore\",\"photoUrl\":\"#ignore\",\"userId\":\"#ignore\"}\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:155\nReferenceError: \"customer_inList\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:194\nclasspath:examples\/users\/TestUsers.feature:37","millis":38297.2406,"status":"failed"},"step":{"comments":["# Test a not admin user"],"line":37,"prefix":"*","index":4,"text":"def testNotAdmin = call read('TestUserNotAdmin.feature') userToken"},"stepLog":"17:51:10.090 classpath:examples\/users\/TestUsers.feature:37\n* def testNotAdmin = call read('TestUserNotAdmin.feature') userToken\nReferenceError: \"datas\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:87\nmatch failed: NOT_EQUALS\n  $ | is equal (STRING:STRING)\n  '#notpresent'\n  '#notpresent'\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:104\nmatch failed: NOT_EQUALS\n  $ | actual path does not exist (STRING:MAP)\n  '#notpresent'\n  {\"id\":\"cust4\",\"name\":\"#ignore\",\"surname\":\"#ignore\",\"photoUrl\":\"#ignore\",\"userId\":\"#ignore\"}\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:155\nReferenceError: \"customer_inList\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:194\nclasspath:examples\/users\/TestUsers.feature:37\n","callResults":[{"prefixedPath":"classpath:examples\/users\/TestUserNotAdmin.feature","loopIndex":-1,"callDepth":1,"description":"","resultDate":"2021-05-19 05:51:10 p.Â m.","durationMillis":38235.0351,"callArg":{"expiresIn":"3600","idToken":"eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg","accessToken":"eyJraWQiOiJIcWFQSnUyR1YzN1F5TnBnVlIwSXRHRHJqQ3huZk41aEFvK1ZmZGNtNDBVPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2MjE0Mzk0MzIsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbVwvZXUtd2VzdC0xX21IdWVBcjJRdSIsImV4cCI6MTYyMTQ0MzAzMiwiaWF0IjoxNjIxNDM5NDMyLCJqdGkiOiIwMWY3OWY5Zi1kZmUxLTQyNDYtOWEyYS1lZTA0MmQyMjM4ZGMiLCJjbGllbnRfaWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsInVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4In0.X4wBb9nxrIdt8z8ZOnTUBKhY_yCRqWe3B-zQrZolNUY_yP_wQUz3RMeEuR2D41d61EYLDcaVpQkXGYdIv7y8d3Ld-_6zyBwWBL6j0hkrGyjWpL72eqzlUMWV-yC9zPmwTfxDwIFE4FI0xgC1S_hHGxvWDc39Eu7i02spVpkXl9GETzBtqax3nPIguNXfXD4--Jsut5hcDu2gRJUTO_LwGo2WTG0vPP2XIslS2q8hDsBRSqF8_fUc77Wvt6iGRmiyc2WwwChGKM5ijSMSDbFyywvn_72-wOzPGLmNnclaiF0VjTNAQ37B5fMoTOcXq1CFoxYv5s0Di1QUqf4qBtUssQ","tokenType":"Bearer","refreshToken":"eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.Iyw1DAY_ChN8kJONvzCb2ZRQTMx6qlp1ivvCmJm-LpveOYeJ0yVW1zsba8_LDPiIP_LOiqhy06t3U4X9_Cn4CNzzrtXGsPVHOEB6xjdWtyKuiCUsugyizn7e3pxBd_uPyTXsyetYag9dYew-clf44DY_qf281wgdiiqrOyux2EDKsoxtL4fD9kwh9KeTdBnm9lR9mW_zICE-8xGyD_gP7YKKIV8dpPAjq5VjlYA8iLgI9It0-TFa87avzV1iYesg5snf0_olrhT5Dg1SzTJfGQzM9SWwkKrBgyOscO8sOTVRL6SWRm_ev0m-8OZzebBhVd15_BIO43zofUQhoqFmvQ.hu4Qbc2yGZjakLd2.6ZwhZdWCMkuj40vegu3s8TtIoDssaT9Bmp4I-rsQAaQUcnueSErDG2IB66wufrVdpfR8f1veDBLUOx7EjNuIqD9tKyzaA7m9SqmSRcPTMzLMdh8s7nszrQ-mV0ZZUzpIfIptVbs5b6cJU7KWZNAcnZrt0Go81pfTSZ_4BK_xZZqAtzVSAY1sLAZHsyK2xXo4uANpMkGhvYHZmb7jtxm3YrJ0BUGpURuXJ8qrp4d5zc3DBizTqC2NpN7mbeuVWWXvupKbR3lJeycqMH8JxUjPi1uHL_7iWtb4-YjuI3XPpntswPJlZqohaQGAhXlloTBHE39XmYy8Lh2peQmjtIEVz9fyB9_vYLPf7dIjT2Gm8HlSF4KlZlQjb8v5K4AebN9DwzPcx2Nw-KkkHnmaFGNTES3rktg3738fvbjywjmqltdARFM5sn3knousN1etMY-LinxXMWMW_1uqoM8UdJvYTersSQwNlF-ziIRo8FOKQI7nYcu-tcDHJI9DP2Hpt_REi-_yQsQNisb6wTw5h0Z7OSe3ZFq-k2_psu3zFMD3l204hW6lnw3o5jKPUmAwDaAsyMFc5iQGkUdV0FgQbPwUJ9JoD1jEAhqCpJ5q9gGsYjy_fz_KgqSENchlEKlAFb2LTvT-LPoQRKzk4BAfG1BqKp7Lb98nMo1zYN4QCO_cDLHaz4nr9-TS1rMFC7ZKAGeRDeorea3O7dkeBibBnX4rSG2oAN2_eWtUS9WGqzFZ8lAthzVdoywLrERqdHtFH62OZN6e5Nkz1iLjxs6IPwp2g9FWC3_fqBMUVv2mg9jL75Fe7brGTC7kx0m45NT94q57nHie6rLoVl64RGGQmXeG79gy4qu1Oq9TQvZG8Gw3B3tK7AGHrGEhQb699XpnTdztgny1P-G8-S0mhIFzMZZ9biQl6AFcKCHl6LsEjORlnwTbgnRWvZ6g3g3ujr1qIYoiSBW_2fr6zLUL79wGSJNEAFyo-Bpu7RwonGQgtQrBUfXD4PTc10WVqVXPtm_n33ciyk3OZShsSyMwrd-NuXUHXwS7s2mxRjXoUV1DnydW-bXro5MSRA22KnfqObfQvavY1pjKLPq2WSdur3c1GetlaeXn542kHvWaXIq_8CclshWtzs38H3rP9vBjlFi0T41a0Rg6iUNoanDjteWeIO4i_xHAhBwsqP5syiNmhSuwQpJ3uN6HCYuk16ELaKrsPvQhSVxIes5d8kHvm4gPfk7xAmqqHjUmUzxkMxoWb6EMU_dAqKjTkpmt3WnpucvzTrgrEnp0O8jYRGzZ9SK0bCIPoDSW3BP3qz3CwgIXMLo2IcPkxfxxzKaYqkSmiE09mhA.vB61f6i6cC9jkengYROUvQ"},"failedCount":4,"packageQualifiedName":"examples.users.TestUserNotAdmin","relativePath":"examples\/users\/TestUserNotAdmin.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":6388600,"millis":6.3886,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:50:31.817 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":4504900,"millis":4.5049,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":12700,"millis":0.0127,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":1287800,"millis":1.2878,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":914100,"millis":0.9141,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":1042000,"millis":1.042,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":576300,"millis":0.5763,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":522100,"millis":0.5221,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:50:31.833 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":1842900,"millis":1.8429,"status":"passed"},"step":{"endLine":35,"line":27,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="}},{"result":{"nanos":311200,"millis":0.3112,"status":"passed"},"step":{"line":36,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":2215800,"millis":2.2158,"status":"passed"},"step":{"line":37,"prefix":"And","index":2,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":810500,"millis":0.8105,"status":"passed"},"step":{"line":39,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":1979844800,"millis":1979.8448,"status":"passed"},"step":{"line":40,"prefix":"When","index":4,"text":"method post"},"stepLog":"17:50:31.854 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n1 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 265\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"surname\":\"surname\",\"name\":\"name\",\"photo\":\"photo.jpg\",\"id\":\"cust0\"},\"query\":\"mutation SaveCustomer($id: ID, $name: String, $surname: String, $photo: String) {\\r\\n    SaveCustomer(input: {id: $id, name: $name, surname: $surname, photo: $photo})\\r\\n} \"}\n\n17:50:33.831 response time in milliseconds: 1975\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 30\n1 < Connection: keep-alive\n1 < Date: Wed, 19 May 2021 15:50:34 GMT\n1 < x-amzn-RequestId: 1c1275d1-b403-4b7f-84a3-b0f664df8479\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: flUHVH97joEFoBQ=\n1 < X-Amzn-Trace-Id: Root=1-60a533c8-01bed2e16f820fee081bc0ae;Sampled=0\n1 < X-Cache: Miss from cloudfront\n1 < Via: 1.1 960b47175d6cfc9ed048624de2747035.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD51-C2\n1 < X-Amz-Cf-Id: 1KfJEMljxkynRIS8Lb4m_LajBUNaiE1K6sijlTD89HA0kR7EoLom5g==\n{\"data\":{\"SaveCustomer\":true}}\n"},{"result":{"nanos":9300,"millis":0.0093,"status":"passed"},"step":{"line":41,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":4009528200,"millis":4009.5282,"status":"passed"},"step":{"line":43,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":2453500,"millis":2.4535,"status":"passed"},"step":{"line":45,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":8581000,"millis":8.581,"status":"passed"},"step":{"line":47,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":49,"description":"","durationMillis":6020.8457,"failed":false,"executorName":"main","name":"Create new Customers","startTime":1621439431848,"refId":"[1.1:49]","endTime":1621439437854,"exampleData":{"id":"cust0","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":0},{"sectionIndex":0,"stepResults":[{"result":{"nanos":6388600,"millis":6.3886,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:50:31.817 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":4504900,"millis":4.5049,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":12700,"millis":0.0127,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":1287800,"millis":1.2878,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":914100,"millis":0.9141,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":1042000,"millis":1.042,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":576300,"millis":0.5763,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":522100,"millis":0.5221,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:50:31.833 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":412200,"millis":0.4122,"status":"passed"},"step":{"endLine":35,"line":27,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="}},{"result":{"nanos":147300,"millis":0.1473,"status":"passed"},"step":{"line":36,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":136200,"millis":0.1362,"status":"passed"},"step":{"line":37,"prefix":"And","index":2,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":142700,"millis":0.1427,"status":"passed"},"step":{"line":39,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":280463600,"millis":280.4636,"status":"passed"},"step":{"line":40,"prefix":"When","index":4,"text":"method post"},"stepLog":"17:50:37.863 request:\n2 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n2 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n2 > Content-Type: application\/json; charset=UTF-8\n2 > Content-Length: 265\n2 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n2 > Connection: Keep-Alive\n2 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n2 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"surname\":\"surname\",\"name\":\"name\",\"photo\":\"photo.jpg\",\"id\":\"cust1\"},\"query\":\"mutation SaveCustomer($id: ID, $name: String, $surname: String, $photo: String) {\\r\\n    SaveCustomer(input: {id: $id, name: $name, surname: $surname, photo: $photo})\\r\\n} \"}\n\n17:50:38.140 response time in milliseconds: 276\n2 < 200\n2 < Content-Type: application\/json\n2 < Content-Length: 30\n2 < Connection: keep-alive\n2 < Date: Wed, 19 May 2021 15:50:38 GMT\n2 < x-amzn-RequestId: 6e167576-7e20-4bc5-ab93-91f1530a1731\n2 < Access-Control-Allow-Origin: *\n2 < x-amz-apigw-id: flUIRGRYDoEFupQ=\n2 < X-Amzn-Trace-Id: Root=1-60a533ce-347c40796a989b63158d8159;Sampled=0\n2 < X-Cache: Miss from cloudfront\n2 < Via: 1.1 0250a97a9fe8f37b6e3c4270db2dc8af.cloudfront.net (CloudFront)\n2 < X-Amz-Cf-Pop: MAD51-C2\n2 < X-Amz-Cf-Id: sGChXFzWVM5V7Dx_JO_8MA_Y1ZI6uiaS2JmCxhAo2V31eHGZ9I2jMA==\n{\"data\":{\"SaveCustomer\":true}}\n"},{"result":{"nanos":16400,"millis":0.0164,"status":"passed"},"step":{"line":41,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":4007936700,"millis":4007.9367,"status":"passed"},"step":{"line":43,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":268100,"millis":0.2681,"status":"passed"},"step":{"line":45,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":568400,"millis":0.5684,"status":"passed"},"step":{"line":47,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":49,"description":"","durationMillis":4305.3401,"failed":false,"executorName":"main","name":"Create new Customers","startTime":1621439437861,"refId":"[1.2:49]","endTime":1621439442152,"exampleData":{"id":"cust1","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":1},{"sectionIndex":0,"stepResults":[{"result":{"nanos":6388600,"millis":6.3886,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:50:31.817 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":4504900,"millis":4.5049,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":12700,"millis":0.0127,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":1287800,"millis":1.2878,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":914100,"millis":0.9141,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":1042000,"millis":1.042,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":576300,"millis":0.5763,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":522100,"millis":0.5221,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:50:31.833 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":485600,"millis":0.4856,"status":"passed"},"step":{"endLine":35,"line":27,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="}},{"result":{"nanos":174200,"millis":0.1742,"status":"passed"},"step":{"line":36,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":158400,"millis":0.1584,"status":"passed"},"step":{"line":37,"prefix":"And","index":2,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":253700,"millis":0.2537,"status":"passed"},"step":{"line":39,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":327795000,"millis":327.795,"status":"passed"},"step":{"line":40,"prefix":"When","index":4,"text":"method post"},"stepLog":"17:50:42.164 request:\n3 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n3 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n3 > Content-Type: application\/json; charset=UTF-8\n3 > Content-Length: 265\n3 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n3 > Connection: Keep-Alive\n3 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n3 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"surname\":\"surname\",\"name\":\"name\",\"photo\":\"photo.jpg\",\"id\":\"cust2\"},\"query\":\"mutation SaveCustomer($id: ID, $name: String, $surname: String, $photo: String) {\\r\\n    SaveCustomer(input: {id: $id, name: $name, surname: $surname, photo: $photo})\\r\\n} \"}\n\n17:50:42.488 response time in milliseconds: 323\n3 < 200\n3 < Content-Type: application\/json\n3 < Content-Length: 30\n3 < Connection: keep-alive\n3 < Date: Wed, 19 May 2021 15:50:42 GMT\n3 < x-amzn-RequestId: f958d607-a7b0-4b35-ac20-05eb0d16d0dc\n3 < Access-Control-Allow-Origin: *\n3 < x-amz-apigw-id: flUI8FBpDoEFyaw=\n3 < X-Amzn-Trace-Id: Root=1-60a533d2-141e425547387aba59148045;Sampled=0\n3 < X-Cache: Miss from cloudfront\n3 < Via: 1.1 c5c852ebeabe49b08625d425153869fe.cloudfront.net (CloudFront)\n3 < X-Amz-Cf-Pop: MAD51-C2\n3 < X-Amz-Cf-Id: Mysb7QKeNZ44tq8OI4-MA2VDjga49vPRYwUwuAUUJch0ZKPvLXYF5g==\n{\"data\":{\"SaveCustomer\":true}}\n"},{"result":{"nanos":16300,"millis":0.0163,"status":"passed"},"step":{"line":41,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":4008779500,"millis":4008.7795,"status":"passed"},"step":{"line":43,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":315300,"millis":0.3153,"status":"passed"},"step":{"line":45,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":610900,"millis":0.6109,"status":"passed"},"step":{"line":47,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":49,"description":"","durationMillis":4353.8374,"failed":false,"executorName":"main","name":"Create new Customers","startTime":1621439442160,"refId":"[1.3:49]","endTime":1621439446499,"exampleData":{"id":"cust2","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":2},{"sectionIndex":0,"stepResults":[{"result":{"nanos":6388600,"millis":6.3886,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:50:31.817 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":4504900,"millis":4.5049,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":12700,"millis":0.0127,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":1287800,"millis":1.2878,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":914100,"millis":0.9141,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":1042000,"millis":1.042,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":576300,"millis":0.5763,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":522100,"millis":0.5221,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:50:31.833 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":301300,"millis":0.3013,"status":"passed"},"step":{"endLine":35,"line":27,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="}},{"result":{"nanos":109200,"millis":0.1092,"status":"passed"},"step":{"line":36,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":121600,"millis":0.1216,"status":"passed"},"step":{"line":37,"prefix":"And","index":2,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":142100,"millis":0.1421,"status":"passed"},"step":{"line":39,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":1559690000,"millis":1559.69,"status":"passed"},"step":{"line":40,"prefix":"When","index":4,"text":"method post"},"stepLog":"17:50:46.507 request:\n4 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n4 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n4 > Content-Type: application\/json; charset=UTF-8\n4 > Content-Length: 265\n4 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n4 > Connection: Keep-Alive\n4 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n4 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"surname\":\"surname\",\"name\":\"name\",\"photo\":\"photo.jpg\",\"id\":\"cust3\"},\"query\":\"mutation SaveCustomer($id: ID, $name: String, $surname: String, $photo: String) {\\r\\n    SaveCustomer(input: {id: $id, name: $name, surname: $surname, photo: $photo})\\r\\n} \"}\n\n17:50:48.064 response time in milliseconds: 1556\n4 < 200\n4 < Content-Type: application\/json\n4 < Content-Length: 30\n4 < Connection: keep-alive\n4 < Date: Wed, 19 May 2021 15:50:48 GMT\n4 < x-amzn-RequestId: 0f952208-522a-4a7b-af84-896b030bf868\n4 < Access-Control-Allow-Origin: *\n4 < x-amz-apigw-id: flUJzFhJDoEFjWA=\n4 < X-Amzn-Trace-Id: Root=1-60a533d8-21feed8405a490380fa19344;Sampled=0\n4 < X-Cache: Miss from cloudfront\n4 < Via: 1.1 c1f1733266ff22358c2c3dd7a5454d9d.cloudfront.net (CloudFront)\n4 < X-Amz-Cf-Pop: MAD51-C2\n4 < X-Amz-Cf-Id: M4pJluPeNznNyMv_4-AlCacffHkUnrgLvS1OJE_yKRq4zGNPeJMCyQ==\n{\"data\":{\"SaveCustomer\":true}}\n"},{"result":{"nanos":20500,"millis":0.0205,"status":"passed"},"step":{"line":41,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":4014344600,"millis":4014.3446,"status":"passed"},"step":{"line":43,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":286900,"millis":0.2869,"status":"passed"},"step":{"line":45,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":597400,"millis":0.5974,"status":"passed"},"step":{"line":47,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":49,"description":"","durationMillis":5590.8621,"failed":false,"executorName":"main","name":"Create new Customers","startTime":1621439446505,"refId":"[1.4:49]","endTime":1621439452081,"exampleData":{"id":"cust3","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":3},{"sectionIndex":0,"stepResults":[{"result":{"nanos":6388600,"millis":6.3886,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:50:31.817 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":4504900,"millis":4.5049,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":12700,"millis":0.0127,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":1287800,"millis":1.2878,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":914100,"millis":0.9141,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":1042000,"millis":1.042,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":576300,"millis":0.5763,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":522100,"millis":0.5221,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:50:31.833 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":310500,"millis":0.3105,"status":"passed"},"step":{"endLine":35,"line":27,"prefix":"*","docString":"{ \n\t\"id\": \"#(id)\", \n\t\"name\": \"#(name)\", \n\t\"surname\": \"#(surname)\", \n\t\"photo\": \"#(photo)\"\n}","index":0,"text":"def customer ="}},{"result":{"nanos":96900,"millis":0.0969,"status":"passed"},"step":{"line":36,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":118900,"millis":0.1189,"status":"passed"},"step":{"line":37,"prefix":"And","index":2,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":132000,"millis":0.132,"status":"passed"},"step":{"line":39,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(customer)'  }"}},{"result":{"nanos":137817800,"millis":137.8178,"status":"passed"},"step":{"line":40,"prefix":"When","index":4,"text":"method post"},"stepLog":"17:50:52.090 request:\n5 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n5 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n5 > Content-Type: application\/json; charset=UTF-8\n5 > Content-Length: 265\n5 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n5 > Connection: Keep-Alive\n5 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n5 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"surname\":\"surname\",\"name\":\"name\",\"photo\":\"photo.jpg\",\"id\":\"cust4\"},\"query\":\"mutation SaveCustomer($id: ID, $name: String, $surname: String, $photo: String) {\\r\\n    SaveCustomer(input: {id: $id, name: $name, surname: $surname, photo: $photo})\\r\\n} \"}\n\n17:50:52.225 response time in milliseconds: 134\n5 < 200\n5 < Content-Type: application\/json\n5 < Content-Length: 30\n5 < Connection: keep-alive\n5 < Date: Wed, 19 May 2021 15:50:52 GMT\n5 < x-amzn-RequestId: ab542aa1-e9c2-4cae-ae55-be5cb155ece3\n5 < Access-Control-Allow-Origin: *\n5 < x-amz-apigw-id: flUKeHZ2DoEFvQg=\n5 < X-Amzn-Trace-Id: Root=1-60a533dc-45c73eb96157c7db2b722299;Sampled=0\n5 < X-Cache: Miss from cloudfront\n5 < Via: 1.1 dadbd3993b5303886df72c2fdce172ca.cloudfront.net (CloudFront)\n5 < X-Amz-Cf-Pop: MAD51-C2\n5 < X-Amz-Cf-Id: R7dmFmGNoHW2wzeH10HXSXfOLfWtxuuGlBqxa-W3GhlNnTLQPLcsdA==\n{\"data\":{\"SaveCustomer\":true}}\n"},{"result":{"nanos":17900,"millis":0.0179,"status":"passed"},"step":{"line":41,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":4003015100,"millis":4003.0151,"status":"passed"},"step":{"line":43,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":296000,"millis":0.296,"status":"passed"},"step":{"line":45,"prefix":"*","index":7,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":826000,"millis":0.826,"status":"passed"},"step":{"line":47,"prefix":"And","index":8,"text":"match response.errors == '#notpresent'"}}],"line":49,"description":"","durationMillis":4157.8796,"failed":false,"executorName":"main","name":"Create new Customers","startTime":1621439452087,"refId":"[1.5:49]","endTime":1621439456230,"exampleData":{"id":"cust4","name":"name","surname":"surname","photo":"photo.jpg"},"exampleIndex":4},{"sectionIndex":1,"stepResults":[{"result":{"nanos":316600,"millis":0.3166,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:50:56.231 dynamic expression complete at index: 5, not map-like: [type: NULL, value: null]\n17:50:56.236 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":113500,"millis":0.1135,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":6800,"millis":0.0068,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":265500,"millis":0.2655,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":207000,"millis":0.207,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":159500,"millis":0.1595,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":143100,"millis":0.1431,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":358400,"millis":0.3584,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:50:56.238 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":579200,"millis":0.5792,"status":"passed"},"step":{"comments":["# This time, the photoUrl field is empty because it isn't a mandatory field"],"line":54,"prefix":"*","index":0,"text":"def new_customerNoPhoto = read('NewCustomerNoPhoto.json')"}},{"result":{"nanos":102500,"millis":0.1025,"status":"passed"},"step":{"line":56,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":134300,"millis":0.1343,"status":"passed"},"step":{"line":57,"prefix":"And","index":2,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":718500,"millis":0.7185,"status":"passed"},"step":{"line":58,"prefix":"And","index":3,"text":"request { query: '#(querySave)',  variables: '#(new_customerNoPhoto)'}"}},{"result":{"nanos":224005000,"millis":224.005,"status":"passed"},"step":{"line":59,"prefix":"When","index":4,"text":"method post"},"stepLog":"17:50:56.241 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n1 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 284\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"surname\":\"Customer surname\",\"name\":\"Customer name\",\"photo\":\"\",\"id\":\"23000000nophoto\"},\"query\":\"mutation SaveCustomer($id: ID, $name: String, $surname: String, $photo: String) {\\r\\n    SaveCustomer(input: {id: $id, name: $name, surname: $surname, photo: $photo})\\r\\n} \"}\n\n17:50:56.463 response time in milliseconds: 222\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 30\n1 < Connection: keep-alive\n1 < Date: Wed, 19 May 2021 15:50:56 GMT\n1 < x-amzn-RequestId: aaf2da83-ff8a-4984-801b-7000c13b7e28\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: flULIFqojoEFmHA=\n1 < X-Amzn-Trace-Id: Root=1-60a533e0-3d6a78bd7a9b91ff0ea18373;Sampled=0\n1 < X-Cache: Miss from cloudfront\n1 < Via: 1.1 c5c852ebeabe49b08625d425153869fe.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD51-C2\n1 < X-Amz-Cf-Id: mVrfp6HlC_78et-op0GYvopHLjwI9h5Y2adeUlkdH_HzUtgt7ksGyg==\n{\"data\":{\"SaveCustomer\":true}}\n"},{"result":{"nanos":16000,"millis":0.016,"status":"passed"},"step":{"line":60,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":4004605500,"millis":4004.6055,"status":"passed"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":62,"prefix":"*","index":6,"text":"wait(4000)"}},{"result":{"nanos":649300,"millis":0.6493,"status":"passed"},"step":{"comments":["# If the customer is saved, the response shouldn't contain a field \"error\""],"line":64,"prefix":"*","index":7,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":222500,"millis":0.2225,"status":"passed"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":66,"prefix":"*","index":8,"text":"if (responseStatus != 200) karate.abort()"}}],"executorName":"main","line":52,"name":"Create a new customer without photo","description":"","durationMillis":4232.6032,"startTime":1621439456236,"failed":false,"refId":"[2:52]","endTime":1621439460470,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":725300,"millis":0.7253,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:51:00.477 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":227600,"millis":0.2276,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":12700,"millis":0.0127,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":438300,"millis":0.4383,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":306100,"millis":0.3061,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":289700,"millis":0.2897,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":258400,"millis":0.2584,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":531900,"millis":0.5319,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:51:00.479 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":238400,"millis":0.2384,"status":"passed"},"step":{"comments":["# List the customer previously saved by id and check if datas are correct","# Get the id of the customer previously saved without photo"],"line":73,"prefix":"*","index":0,"text":"def customer_savedNoPhoto = read('NewCustomerNoPhoto.json')"}},{"result":{"nanos":479900,"millis":0.4799,"status":"passed"},"step":{"endLine":79,"line":74,"prefix":"*","docString":"{\n  \t    \"id\": \"#(customer_savedNoPhoto.id)\"\n  \t }","index":1,"text":"def id ="}},{"result":{"nanos":115100,"millis":0.1151,"status":"passed"},"step":{"line":81,"prefix":"Given","index":2,"text":"path 'graphql'"}},{"result":{"nanos":207100,"millis":0.2071,"status":"passed"},"step":{"line":82,"prefix":"And","index":3,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":566000,"millis":0.566,"status":"passed"},"step":{"line":83,"prefix":"And","index":4,"text":"request { query: '#(queryCustomerReadModel)', variables: '#(id)'}"}},{"result":{"nanos":285239200,"millis":285.2392,"status":"passed"},"step":{"line":84,"prefix":"When","index":5,"text":"method post"},"stepLog":"17:51:00.483 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n1 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 221\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"id\":\"23000000nophoto\"},\"query\":\"query CustomerReadModel($id: ID!) {\\r\\n    CustomerReadModel(id: $id) {\\r\\n        id\\r\\n        name\\r\\n        surname\\r\\n        photoUrl\\r\\n        userId\\r\\n    }\\r\\n}\"}\n\n17:51:00.766 response time in milliseconds: 282\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 154\n1 < Connection: keep-alive\n1 < Date: Wed, 19 May 2021 15:51:01 GMT\n1 < x-amzn-RequestId: f9dce9ec-9d55-4b54-a1c1-4dd5834035e3\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: flULzG1XjoEFzzA=\n1 < X-Amzn-Trace-Id: Root=1-60a533e5-0afcfbb40f8226672d94c78f;Sampled=0\n1 < X-Cache: Miss from cloudfront\n1 < Via: 1.1 09e594de40cb3eb83a4bc581fa48d9e2.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD51-C2\n1 < X-Amz-Cf-Id: ndZjDqEnShdPLAk9DJYy16yiyNYMHc0TDqEU5mr69iNj2uLDr4tDBQ==\n{\"data\":{\"CustomerReadModel\":{\"photoUrl\":\"\",\"surname\":\"Customer surname\",\"name\":\"Customer name\",\"id\":\"23000000nophoto\",\"userId\":\"userNotAdmin@test.com\"}}}\n"},{"result":{"nanos":15700,"millis":0.0157,"status":"passed"},"step":{"line":85,"prefix":"Then","index":6,"text":"status 200"}},{"result":{"nanos":14945000,"errorMessage":"ReferenceError: \"datas\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:87","millis":14.945,"status":"failed"},"step":{"comments":["# Check that the datas of the customer are the same as we saved and it has the Id of the user who created it, in this case, the same as it's signed"],"line":87,"prefix":"And","index":7,"text":"match response.data.CustomerReadModel == {id: '#(customer_savedNoPhoto.id)', name: '#(customer_savedNoPhoto.name)', surname: '#(customer_savedNoPhoto.surname)', photoUrl: '#(customer_savedNoPhoto.photo)', userId: '#(datas.username)' }"},"stepLog":"17:51:00.782 classpath:examples\/users\/TestUserNotAdmin.feature:87\nAnd match response.data.CustomerReadModel == {id: '#(customer_savedNoPhoto.id)', name: '#(customer_savedNoPhoto.name)', surname: '#(customer_savedNoPhoto.surname)', photoUrl: '#(customer_savedNoPhoto.photo)', userId: '#(datas.username)' }\nReferenceError: \"datas\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:87\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"*","index":8,"text":"if (responseStatus != 200) karate.abort()"}}],"line":69,"description":"","durationMillis":304.5964,"failed":true,"error":"ReferenceError: \"datas\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:87","executorName":"main","name":"List a customer by id","startTime":1621439460476,"refId":"[3:69]","endTime":1621439460782,"exampleIndex":-1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":596000,"millis":0.596,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:51:00.801 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":1210000,"millis":1.21,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":28200,"millis":0.0282,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":847600,"millis":0.8476,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":615000,"millis":0.615,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":490200,"millis":0.4902,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":511200,"millis":0.5112,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":1098700,"millis":1.0987,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:51:00.805 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":754800,"millis":0.7548,"status":"passed"},"step":{"comments":["# Read the user from a json file"],"line":93,"prefix":"*","index":0,"text":"def NewCustomerIncomplete = read('NewCustomerIncomplete.json')"}},{"result":{"nanos":448700,"millis":0.4487,"status":"passed"},"step":{"line":95,"prefix":"Given","index":1,"text":"path 'graphql'"}},{"result":{"nanos":514500,"millis":0.5145,"status":"passed"},"step":{"line":96,"prefix":"And","index":2,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":666000,"millis":0.666,"status":"passed"},"step":{"line":97,"prefix":"And","index":3,"text":"request { query: '#(querySave)', variables: '#(NewCustomerIncomplete)'}"}},{"result":{"nanos":131898400,"millis":131.8984,"status":"passed"},"step":{"line":98,"prefix":"When","index":4,"text":"method post"},"stepLog":"17:51:00.810 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n1 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 265\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"surname\":\"Customer Incomplete surname\",\"id\":\"Customer Incomplete\"},\"query\":\"mutation SaveCustomer($id: ID, $name: String, $surname: String, $photo: String) {\\r\\n    SaveCustomer(input: {id: $id, name: $name, surname: $surname, photo: $photo})\\r\\n} \"}\n\n17:51:00.939 response time in milliseconds: 129\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 30\n1 < Connection: keep-alive\n1 < Date: Wed, 19 May 2021 15:51:01 GMT\n1 < x-amzn-RequestId: aca8ddab-6a31-44f8-8ff6-35616fdd681f\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: flUL1E23DoEF5wg=\n1 < X-Amzn-Trace-Id: Root=1-60a533e5-2e2e42067d1ccc330c787e74;Sampled=0\n1 < X-Cache: Miss from cloudfront\n1 < Via: 1.1 fe55d6b634c29e0dbde85630de5f2787.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD51-C2\n1 < X-Amz-Cf-Id: zc0bFS_r0vTsKvfqsghM2SS6N_yS_Vwxmpq2s4xcFqfzfKEgHRJ8kw==\n{\"data\":{\"SaveCustomer\":true}}\n"},{"result":{"nanos":15400,"millis":0.0154,"status":"passed"},"step":{"line":99,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":1315800,"millis":1.3158,"status":"passed"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":102,"prefix":"*","index":6,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":1063700,"errorMessage":"match failed: NOT_EQUALS\n  $ | is equal (STRING:STRING)\n  '#notpresent'\n  '#notpresent'\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:104","millis":1.0637,"status":"failed"},"step":{"comments":["# It should fail, so the response must return an error"],"line":104,"prefix":"And","index":7,"text":"match response.errors != '#notpresent'"},"stepLog":"17:51:00.943 classpath:examples\/users\/TestUserNotAdmin.feature:104\nAnd match response.errors != '#notpresent'\nmatch failed: NOT_EQUALS\n  $ | is equal (STRING:STRING)\n  '#notpresent'\n  '#notpresent'\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:104\n"}],"line":91,"description":"","durationMillis":142.0742,"failed":true,"error":"match failed: NOT_EQUALS\n  $ | is equal (STRING:STRING)\n  '#notpresent'\n  '#notpresent'\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:104","executorName":"main","name":"Save a new customer with incomplete mandatory datas","startTime":1621439460800,"refId":"[4:91]","endTime":1621439460943,"exampleIndex":-1},{"sectionIndex":4,"stepResults":[{"result":{"nanos":445200,"millis":0.4452,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:51:00.950 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":110600,"millis":0.1106,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":9400,"millis":0.0094,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":447200,"millis":0.4472,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":364500,"millis":0.3645,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":295200,"millis":0.2952,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":299900,"millis":0.2999,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":631600,"millis":0.6316,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:51:00.952 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":168700,"millis":0.1687,"status":"passed"},"step":{"comments":["# List the customers to select one to delete"],"line":108,"prefix":"Given","index":0,"text":"path 'graphql'"}},{"result":{"nanos":242800,"millis":0.2428,"status":"passed"},"step":{"line":109,"prefix":"And","index":1,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":508600,"millis":0.5086,"status":"passed"},"step":{"line":110,"prefix":"And","index":2,"text":"request { query: '#(queryCustReadModels)'}"}},{"result":{"nanos":220980200,"millis":220.9802,"status":"passed"},"step":{"line":111,"prefix":"When","index":3,"text":"method post"},"stepLog":"17:51:00.955 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n1 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 167\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query CustomerReadModels {\\r\\n    CustomerReadModels {\\r\\n        id\\r\\n        name\\r\\n        surname\\r\\n        photoUrl\\r\\n        userId\\r\\n    }\\r\\n}\"}\n\n17:51:01.173 response time in milliseconds: 217\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 1130\n1 < Connection: keep-alive\n1 < Date: Wed, 19 May 2021 15:51:01 GMT\n1 < x-amzn-RequestId: 94961900-07a8-4906-a41c-61082215d47c\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: flUL3GePDoEFSMg=\n1 < X-Amzn-Trace-Id: Root=1-60a533e5-496f53bd11bae77d1d60cbda;Sampled=0\n1 < X-Cache: Miss from cloudfront\n1 < Via: 1.1 9809ca806cde9d8f9a57379e55ece5b7.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD51-C2\n1 < X-Amz-Cf-Id: n4Rp6BjRPN6K_TLMp6J1_tLBmZHRxbyVq461Dn-vcf9s8HkRfEDuow==\n{\"data\":{\"CustomerReadModels\":[{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust4\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust2\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Customer surname\",\"name\":\"Customer name\",\"id\":\"2100000photo\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Customer Incomplete surname\",\"name\":null,\"id\":\"Customer Incomplete\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust0\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Surname Updated again\",\"name\":\"Name Updated again\",\"id\":\"2100000CustMod\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Customer surname\",\"name\":\"Customer name\",\"id\":\"23000000nophoto\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust1\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Customer3 Surname\",\"name\":\"Customer3\",\"id\":\"3\",\"userId\":\"admin@theagilemonkeys.com\"},{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust3\",\"userId\":\"userNotAdmin@test.com\"}]}}\n"},{"result":{"nanos":27900,"millis":0.0279,"status":"passed"},"step":{"line":112,"prefix":"Then","index":4,"text":"status 200"}},{"result":{"nanos":327300,"millis":0.3273,"status":"passed"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":115,"prefix":"*","index":5,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":606700,"millis":0.6067,"status":"passed"},"step":{"comments":["# Check that the response doesn't contain a field \"error\""],"line":118,"prefix":"*","index":6,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":656900,"millis":0.6569,"status":"passed"},"step":{"line":119,"prefix":"And","index":7,"text":"match response.data.CustomerReadModels contains {id: '#ignore', name: '#ignore', surname: '#ignore', photoUrl: '#ignore', userId: '#ignore' }"}},{"result":{"nanos":1446500,"millis":1.4465,"status":"passed"},"step":{"comments":["# Save the body of the response and get the first to delete"],"line":122,"prefix":"*","index":8,"text":"def list_customers = response.data.CustomerReadModels"}},{"result":{"nanos":3740900,"millis":3.7409,"status":"passed"},"step":{"line":123,"prefix":"*","index":9,"text":"def customer_toDelete = list_customers[0]"}},{"result":{"nanos":334800,"millis":0.3348,"status":"passed"},"step":{"comments":["#### Delete the customer"],"line":126,"prefix":"Given","index":10,"text":"path 'graphql'"}},{"result":{"nanos":434700,"millis":0.4347,"status":"passed"},"step":{"line":127,"prefix":"And","index":11,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":1410700,"millis":1.4107,"status":"passed"},"step":{"line":128,"prefix":"And","index":12,"text":"request { query: '#(queryDeleteCustomer)', variables: '#(customer_toDelete)'}"}},{"result":{"nanos":286171500,"millis":286.1715,"status":"passed"},"step":{"line":129,"prefix":"When","index":13,"text":"method post"},"stepLog":"17:51:01.187 request:\n2 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n2 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n2 > Content-Type: application\/json; charset=UTF-8\n2 > Content-Length: 204\n2 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n2 > Connection: Keep-Alive\n2 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n2 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust4\",\"userId\":\"userNotAdmin@test.com\"},\"query\":\"mutation DeleteCustomer($id: ID) {\\r\\n    DeleteCustomer(input: {id: $id})\\r\\n} \\r\\n\"}\n\n17:51:01.469 response time in milliseconds: 282\n2 < 200\n2 < Content-Type: application\/json\n2 < Content-Length: 32\n2 < Connection: keep-alive\n2 < Date: Wed, 19 May 2021 15:51:01 GMT\n2 < x-amzn-RequestId: da934ea1-0804-44e8-8a64-1a2b74cdc392\n2 < Access-Control-Allow-Origin: *\n2 < x-amz-apigw-id: flUL6FNOjoEFiZw=\n2 < X-Amzn-Trace-Id: Root=1-60a533e5-7cdb54a7515ed9114bfd39e8;Sampled=0\n2 < X-Cache: Miss from cloudfront\n2 < Via: 1.1 02d3291a1ad341b65154c2216e21838b.cloudfront.net (CloudFront)\n2 < X-Amz-Cf-Pop: MAD51-C2\n2 < X-Amz-Cf-Id: VnaOB_tljJWecNznQbUfoP4YolhvTaW41-Jf0Hkpkl47_eU_QlnouQ==\n{\"data\":{\"DeleteCustomer\":true}}\n"},{"result":{"nanos":19800,"millis":0.0198,"status":"passed"},"step":{"line":130,"prefix":"Then","index":14,"text":"status 200"}},{"result":{"nanos":4004591500,"millis":4004.5915,"status":"passed"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":132,"prefix":"*","index":15,"text":"wait(4000)"}},{"result":{"nanos":289500,"millis":0.2895,"status":"passed"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":134,"prefix":"*","index":16,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":4997300,"millis":4.9973,"status":"passed"},"step":{"comments":["# Check if the delete fails"],"line":136,"prefix":"*","index":17,"text":"eval if(response.errors != '#notpresent') karate.log(\"CUSTOMER NOT DELETED\")"},"stepLog":"17:51:05.481 CUSTOMER NOT DELETED \n"},{"result":{"nanos":693700,"millis":0.6937,"status":"passed"},"step":{"endLine":144,"comments":["#### Check that the customer has been deleted consulting by the id"],"line":139,"prefix":"*","docString":"{ \n   \"id\": \"#(customer_toDelete.id)\"\n}","index":18,"text":"def id ="}},{"result":{"nanos":137600,"millis":0.1376,"status":"passed"},"step":{"line":145,"prefix":"Given","index":19,"text":"path 'graphql'"}},{"result":{"nanos":176800,"millis":0.1768,"status":"passed"},"step":{"line":146,"prefix":"And","index":20,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":706900,"millis":0.7069,"status":"passed"},"step":{"line":147,"prefix":"And","index":21,"text":"request { query: '#(queryCustReadModel)', variables: '#(id)'}"}},{"result":{"nanos":120728200,"millis":120.7282,"status":"passed"},"step":{"line":148,"prefix":"When","index":22,"text":"method post"},"stepLog":"17:51:05.484 request:\n3 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n3 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n3 > Content-Type: application\/json; charset=UTF-8\n3 > Content-Length: 60\n3 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n3 > Connection: Keep-Alive\n3 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n3 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"id\":\"cust4\"},\"query\":\"#(queryCustReadModel)\"}\n\n17:51:05.602 response time in milliseconds: 118\n3 < 200\n3 < Content-Type: application\/json\n3 < Content-Length: 58\n3 < Connection: keep-alive\n3 < Date: Wed, 19 May 2021 15:51:06 GMT\n3 < x-amzn-RequestId: 812cfbc3-45db-4132-988a-78dbe8e0fa3e\n3 < Access-Control-Allow-Origin: *\n3 < x-amz-apigw-id: flUMkGuODoEFSMg=\n3 < X-Amzn-Trace-Id: Root=1-60a533e9-2097d79f201474a67688e654;Sampled=0\n3 < X-Cache: Miss from cloudfront\n3 < Via: 1.1 71a0472adc0e71a3b21b29ba3bec35f2.cloudfront.net (CloudFront)\n3 < X-Amz-Cf-Pop: MAD51-C2\n3 < X-Amz-Cf-Id: AVgF9l4plwR8f8zukJo3JsquDGEeXUI6A9D2SQGJRuqCvuH7GC6sRA==\n{\"errors\":[{\"message\":\"Syntax Error: Unexpected <EOF>.\"}]}\n"},{"result":{"nanos":19200,"millis":0.0192,"status":"passed"},"step":{"line":149,"prefix":"Then","index":23,"text":"status 200"}},{"result":{"nanos":404700,"millis":0.4047,"status":"passed"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":152,"prefix":"*","index":24,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":1326200,"errorMessage":"match failed: NOT_EQUALS\n  $ | actual path does not exist (STRING:MAP)\n  '#notpresent'\n  {\"id\":\"cust4\",\"name\":\"#ignore\",\"surname\":\"#ignore\",\"photoUrl\":\"#ignore\",\"userId\":\"#ignore\"}\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:155","millis":1.3262,"status":"failed"},"step":{"comments":["# The response shouldn't return any data"],"line":155,"prefix":"And","index":25,"text":"match response.data.CustomerReadModel != {id: '#(customer_toDelete.id)', name: '#ignore', surname: '#ignore', photoUrl: '#ignore', userId: '#ignore' }"},"stepLog":"17:51:05.606 classpath:examples\/users\/TestUserNotAdmin.feature:155\nAnd match response.data.CustomerReadModel != {id: '#(customer_toDelete.id)', name: '#ignore', surname: '#ignore', photoUrl: '#ignore', userId: '#ignore' }\nmatch failed: NOT_EQUALS\n  $ | actual path does not exist (STRING:MAP)\n  '#notpresent'\n  {\"id\":\"cust4\",\"name\":\"#ignore\",\"surname\":\"#ignore\",\"photoUrl\":\"#ignore\",\"userId\":\"#ignore\"}\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:155\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":156,"prefix":"And","index":26,"text":"match response.errors == '#notpresent'"}}],"line":106,"description":"","durationMillis":4653.7532,"failed":true,"error":"match failed: NOT_EQUALS\n  $ | actual path does not exist (STRING:MAP)\n  '#notpresent'\n  {\"id\":\"cust4\",\"name\":\"#ignore\",\"surname\":\"#ignore\",\"photoUrl\":\"#ignore\",\"userId\":\"#ignore\"}\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:155","executorName":"main","name":"Delete customers","startTime":1621439460949,"refId":"[5:106]","endTime":1621439465606,"exampleIndex":-1},{"sectionIndex":5,"stepResults":[{"result":{"nanos":441900,"millis":0.4419,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:51:05.614 over-writing existing variable 'wait' with new value: function(pause){ java.lang.Thread.sleep(pause) }\n"},{"result":{"nanos":156400,"millis":0.1564,"status":"passed"},"step":{"comments":["# Define a function to generate customers"],"background":true,"line":9,"prefix":"*","index":1,"text":"def generatorCust = function(i){ if (i == 5) return null; return { id: 'cust' + i, name: 'name', surname: 'surname', photo: 'photo.jpg' } }"}},{"result":{"nanos":12500,"millis":0.0125,"status":"passed"},"step":{"background":true,"line":11,"prefix":"*","index":2,"text":"url httpUrl"}},{"result":{"nanos":444600,"millis":0.4446,"status":"passed"},"step":{"comments":["# Define the graphql queries for using them in several scenarios"],"background":true,"line":14,"prefix":"*","index":3,"text":"def querySave = read('SaveCustomer.graphql')"}},{"result":{"nanos":355200,"millis":0.3552,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":4,"text":"def queryCustomerReadModel = read('CustomerReadModel.graphql')"}},{"result":{"nanos":381000,"millis":0.381,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":5,"text":"def queryCustReadModels = read('CustomerReadModels.graphql')"}},{"result":{"nanos":361000,"millis":0.361,"status":"passed"},"step":{"background":true,"line":17,"prefix":"*","index":6,"text":"def queryDeleteCustomer =  read('DeleteCustomer.graphql')"}},{"result":{"nanos":709500,"millis":0.7095,"status":"passed"},"step":{"comments":["# Define the user logged"],"background":true,"line":20,"prefix":"*","index":7,"text":"def userDatas = read('signinDatasUserNoAdmin.json')"},"stepLog":"17:51:05.616 over-writing existing variable 'userDatas' with new value: read('signinDatasUserNoAdmin.json')\n"},{"result":{"nanos":1238300,"millis":1.2383,"status":"passed"},"step":{"comments":["# Modify a customer created by the admin user"],"line":161,"prefix":"*","index":0,"text":"def customerToModify = read('newCustomerToModify.json')"}},{"result":{"nanos":1073200,"millis":1.0732,"status":"passed"},"step":{"comments":["# Update the name and the surname"],"line":164,"prefix":"*","index":1,"text":"set customerToModify.name = \"Name Updated again\""}},{"result":{"nanos":497600,"millis":0.4976,"status":"passed"},"step":{"line":165,"prefix":"*","index":2,"text":"set customerToModify.surname = \"Surname Updated again\""}},{"result":{"nanos":261600,"millis":0.2616,"status":"passed"},"step":{"comments":["#* set customerToModify.photoUrl = \"photoUpdated.jpg\""],"line":168,"prefix":"Given","index":3,"text":"path 'graphql'"}},{"result":{"nanos":263100,"millis":0.2631,"status":"passed"},"step":{"line":169,"prefix":"And","index":4,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":498500,"millis":0.4985,"status":"passed"},"step":{"line":170,"prefix":"And","index":5,"text":"request { query: '#(querySave)', variables: '#(customerToModify)'}"}},{"result":{"nanos":262783500,"millis":262.7835,"status":"passed"},"step":{"line":171,"prefix":"When","index":6,"text":"method post"},"stepLog":"17:51:05.623 request:\n1 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n1 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 302\n1 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"variables\":{\"surname\":\"Surname Updated again\",\"name\":\"Name Updated again\",\"photo\":\"photo.jpg\",\"id\":\"2100000CustMod\"},\"query\":\"mutation SaveCustomer($id: ID, $name: String, $surname: String, $photo: String) {\\r\\n    SaveCustomer(input: {id: $id, name: $name, surname: $surname, photo: $photo})\\r\\n} \"}\n\n17:51:05.883 response time in milliseconds: 260\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 30\n1 < Connection: keep-alive\n1 < Date: Wed, 19 May 2021 15:51:06 GMT\n1 < x-amzn-RequestId: 63fc0446-c825-4bdb-a1e7-13a0b0557b71\n1 < Access-Control-Allow-Origin: *\n1 < x-amz-apigw-id: flUMmFpUDoEF4RQ=\n1 < X-Amzn-Trace-Id: Root=1-60a533ea-0a9489fb451b834d5982a907;Sampled=0\n1 < X-Cache: Miss from cloudfront\n1 < Via: 1.1 56eff4217adb539e7a42fbab3eee2d4d.cloudfront.net (CloudFront)\n1 < X-Amz-Cf-Pop: MAD51-C2\n1 < X-Amz-Cf-Id: 6TbZHrcrFpA4FgoW3e7VyuSi77ng8WnhII4pjMuTQY8A0rxBjp4Z0Q==\n{\"data\":{\"SaveCustomer\":true}}\n"},{"result":{"nanos":17900,"millis":0.0179,"status":"passed"},"step":{"line":172,"prefix":"Then","index":7,"text":"status 200"}},{"result":{"nanos":4013647700,"millis":4013.6477,"status":"passed"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":174,"prefix":"*","index":8,"text":"wait(4000)"}},{"result":{"nanos":365900,"millis":0.3659,"status":"passed"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":177,"prefix":"*","index":9,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":587500,"millis":0.5875,"status":"passed"},"step":{"comments":["# Check if the response contains any error"],"line":180,"prefix":"*","index":10,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":244900,"millis":0.2449,"status":"passed"},"step":{"comments":["### Check that the update was fine and the customer has the id of the last user who updated it"],"line":183,"prefix":"Given","index":11,"text":"path 'graphql'"}},{"result":{"nanos":6955200,"millis":6.9552,"status":"passed"},"step":{"line":184,"prefix":"And","index":12,"text":"header Authorization = userToken.tokenType + ' ' + userToken.idToken"}},{"result":{"nanos":348800,"millis":0.3488,"status":"passed"},"step":{"line":185,"prefix":"And","index":13,"text":"request { query: '#(queryCustReadModels)'}"}},{"result":{"nanos":173705900,"millis":173.7059,"status":"passed"},"step":{"line":186,"prefix":"When","index":14,"text":"method post"},"stepLog":"17:51:09.909 request:\n2 > POST https:\/\/pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\/test-qa-estrella-prod\/graphql\n2 > Authorization: Bearer eyJraWQiOiJHa3NQT29DVkd3b2NMV0ROZ0tvNVE0R3ViRFNUV0xNeDhHYVJmSFZcL0U3QT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1MzFjNDUxNi1kNGI2LTRiMTYtYmQ0NC1lOWQyNmVkNmRkODgiLCJhdWQiOiI3OTlob2d1Y20zNjN2NTVsN2RrMm4xbDV1MCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJldmVudF9pZCI6ImMwODk2YjFhLWRkYzEtNDBjNy1iZTkxLTBjMWNjYjUzNGVkMiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjIxNDM5NDMyLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9tSHVlQXIyUXUiLCJjb2duaXRvOnVzZXJuYW1lIjoiNTMxYzQ1MTYtZDRiNi00YjE2LWJkNDQtZTlkMjZlZDZkZDg4IiwiZXhwIjoxNjIxNDQzMDMyLCJjdXN0b206cm9sZSI6InVzZXIiLCJpYXQiOjE2MjE0Mzk0MzIsImVtYWlsIjoidXNlck5vdEFkbWluQHRlc3QuY29tIn0.d6tF0XwVhzlIqcaffQi5fmD0Wv0Td8HRPB0c-mNb8fQSQfd9Mdp0DjQpUUaBL0Ky6iqhc3kKT39Hhe0CUNBH0WQykbMMP3dF8y7Pco8OXJ8a8rhG6PGH4P4z-r9Xx4dPEf14jSLllswPrhkfihyJNFnPyRsiq6WZAIVS69aSwLQsd6u_HS2ixaBXhR5ItouPGksIG_9IBh-OHY6T3kyB9XdRUsikP3_Ej7as5axKuyImWiQUZYnfnOF_y8ipiNJzbxG_FU8GpIsk_uGfPYcomg_QgSYZhZcvV0s9bAGN4sZSM8He11RP_ZaJVAwg7nex80QVPWmMBAN2h6XwIJPikg\n2 > Content-Type: application\/json; charset=UTF-8\n2 > Content-Length: 167\n2 > Host: pnbbxqm2y9.execute-api.eu-west-1.amazonaws.com\n2 > Connection: Keep-Alive\n2 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n2 > Accept-Encoding: gzip,deflate\n{\"query\":\"query CustomerReadModels {\\r\\n    CustomerReadModels {\\r\\n        id\\r\\n        name\\r\\n        surname\\r\\n        photoUrl\\r\\n        userId\\r\\n    }\\r\\n}\"}\n\n17:51:10.080 response time in milliseconds: 169\n2 < 200\n2 < Content-Type: application\/json\n2 < Content-Length: 1034\n2 < Connection: keep-alive\n2 < Date: Wed, 19 May 2021 15:51:10 GMT\n2 < x-amzn-RequestId: 8104c18a-515f-44b3-8fe0-ccc8b7254134\n2 < Access-Control-Allow-Origin: *\n2 < x-amz-apigw-id: flUNRG7UjoEFuXw=\n2 < X-Amzn-Trace-Id: Root=1-60a533ee-798ef9022448b7663b1d4603;Sampled=0\n2 < X-Cache: Miss from cloudfront\n2 < Via: 1.1 b48ff99ee80d859d9aeaafd9cb93df6f.cloudfront.net (CloudFront)\n2 < X-Amz-Cf-Pop: MAD51-C2\n2 < X-Amz-Cf-Id: l1YIaOt_jonGmaAoYjLtzFzQ6KxULfK7fctbRUfVEDJF7BSIctrqwQ==\n{\"data\":{\"CustomerReadModels\":[{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust2\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Customer surname\",\"name\":\"Customer name\",\"id\":\"2100000photo\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Customer Incomplete surname\",\"name\":null,\"id\":\"Customer Incomplete\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust0\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Surname Updated again\",\"name\":\"Name Updated again\",\"id\":\"2100000CustMod\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Customer surname\",\"name\":\"Customer name\",\"id\":\"23000000nophoto\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust1\",\"userId\":\"userNotAdmin@test.com\"},{\"photoUrl\":\"\",\"surname\":\"Customer3 Surname\",\"name\":\"Customer3\",\"id\":\"3\",\"userId\":\"admin@theagilemonkeys.com\"},{\"photoUrl\":\"\",\"surname\":\"surname\",\"name\":\"name\",\"id\":\"cust3\",\"userId\":\"userNotAdmin@test.com\"}]}}\n"},{"result":{"nanos":18900,"millis":0.0189,"status":"passed"},"step":{"line":187,"prefix":"Then","index":15,"text":"status 200"}},{"result":{"nanos":334800,"millis":0.3348,"status":"passed"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":190,"prefix":"*","index":16,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":563900,"millis":0.5639,"status":"passed"},"step":{"comments":["# Check that the response doesn't contains a field \"error\""],"line":193,"prefix":"*","index":17,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":6973900,"errorMessage":"ReferenceError: \"customer_inList\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:194","millis":6.9739,"status":"failed"},"step":{"line":194,"prefix":"*","index":18,"text":"match response.data.CustomerReadModels contains {id: '#(customerToModify.id)', name: '#(customerToModify.name)', surname: '#(customerToModify.surname)', photoUrl: '#(customer_inList.photoUrl)', userId: '#(datas.username)' }"},"stepLog":"17:51:10.090 classpath:examples\/users\/TestUserNotAdmin.feature:194\n* match response.data.CustomerReadModels contains {id: '#(customerToModify.id)', name: '#(customerToModify.name)', surname: '#(customerToModify.surname)', photoUrl: '#(customer_inList.photoUrl)', userId: '#(datas.username)' }\nReferenceError: \"customer_inList\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:194\n"}],"line":159,"description":"","durationMillis":4473.2432,"failed":true,"error":"ReferenceError: \"customer_inList\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:194","executorName":"main","name":"Update a customer","startTime":1621439465613,"refId":"[6:159]","endTime":1621439470090,"exampleIndex":-1}],"name":"Test the API for an user not admin in the environment set from the java class","passedCount":6}]},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"*","index":5,"text":"wait(4000)"}}],"line":27,"description":"","durationMillis":38723.785,"failed":true,"error":"ReferenceError: \"datas\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:87\nmatch failed: NOT_EQUALS\n  $ | is equal (STRING:STRING)\n  '#notpresent'\n  '#notpresent'\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:104\nmatch failed: NOT_EQUALS\n  $ | actual path does not exist (STRING:MAP)\n  '#notpresent'\n  {\"id\":\"cust4\",\"name\":\"#ignore\",\"surname\":\"#ignore\",\"photoUrl\":\"#ignore\",\"userId\":\"#ignore\"}\n\nclasspath:examples\/users\/TestUserNotAdmin.feature:155\nReferenceError: \"customer_inList\" is not defined\nclasspath:examples\/users\/TestUserNotAdmin.feature:194\nclasspath:examples\/users\/TestUsers.feature:37","executorName":"main","name":"Test if the API met the acceptance criteria for a not admin user","startTime":1621439431364,"refId":"[2:27]","endTime":1621439470090,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":217800,"millis":0.2178,"status":"passed"},"step":{"comments":["# Define a function to introduce a sleep in the test"],"background":true,"line":6,"prefix":"*","index":0,"text":"def wait = function(pause){ java.lang.Thread.sleep(pause) }"},"stepLog":"17:51:10.103 karate.env system property was: prod \n"},{"result":{"nanos":10000,"millis":0.01,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":1,"text":"url httpUrl"}},{"result":{"nanos":748200,"millis":0.7482,"status":"passed"},"step":{"comments":["# The user admin save a new user who will be sign in the API to get a token and test the queries and mutations not allowed to him"],"line":43,"prefix":"*","index":0,"text":"def querySaveUser = read('SaveUser.graphql')"}},{"result":{"nanos":767700,"millis":0.7677,"status":"passed"},"step":{"comments":["# JSON file with the new user's datas"],"line":45,"prefix":"*","index":1,"text":"def NewUser = read('UserToChange.json')"}},{"result":{"nanos":411700,"millis":0.4117,"status":"passed"},"step":{"line":47,"prefix":"Given","index":2,"text":"path 'graphql'"}},{"result":{"nanos":1152100,"errorMessage":">>>> js failed:\n01: signIn.response.tokenType + ' ' + signIn.response.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"signIn\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUsers.feature:48","millis":1.1521,"status":"failed"},"step":{"line":48,"prefix":"And","index":3,"text":"header Authorization = signIn.response.tokenType + ' ' + signIn.response.idToken"},"stepLog":"17:51:10.107 classpath:examples\/users\/TestUsers.feature:48\nAnd header Authorization = signIn.response.tokenType + ' ' + signIn.response.idToken\n>>>> js failed:\n01: signIn.response.tokenType + ' ' + signIn.response.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"signIn\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUsers.feature:48\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":4,"text":"request { query: '#(querySaveUser)',  variables: '#(NewUser)'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"When","index":5,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"Then","index":6,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Introduce a pause so the user can be saved before the next test"],"line":54,"prefix":"*","index":7,"text":"wait(4000)"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the response status is not 200, the test finish"],"line":56,"prefix":"*","index":8,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the user can't be created, the response contains a field \"error\""],"line":58,"prefix":"*","index":9,"text":"match response.errors == '#notpresent'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# The new user need to obtain a token"],"line":61,"prefix":"*","index":10,"text":"def clientId = adminDatas.clientId"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":62,"prefix":"*","index":11,"text":"def username = NewUser.username"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":63,"prefix":"*","index":12,"text":"def password = NewUser.password"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"endLine":71,"line":64,"prefix":"*","docString":"{\n  \"clientId\": \"#(clientId)\",\n \"username\": \"#(username)\",\n \"password\": \"#(password)\"\n}","index":13,"text":"def newSignUser ="}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":72,"prefix":"*","index":14,"text":"def newSignIn = call read('signin.feature') newSignUser"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":73,"prefix":"*","index":15,"text":"def newToken = newSignIn.response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Call the feature to test the API with the queries not allowed for a not admin user"],"line":77,"prefix":"*","index":16,"text":"def newUserTest = call read('TestUserNoAdminCannotDo.feature') newToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":79,"prefix":"*","index":17,"text":"if (responseStatus != 200) karate.abort()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# if the user can't be created, the response contains a field \"error\""],"line":81,"prefix":"*","index":18,"text":"match response.errors == '#notpresent'"}}],"line":40,"description":"","durationMillis":3.3075,"failed":true,"error":">>>> js failed:\n01: signIn.response.tokenType + ' ' + signIn.response.idToken\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"signIn\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/TestUsers.feature:48","executorName":"main","name":"Test at the same time the creation of a new user and that the API met the acceptance criteria for him","startTime":1621439470102,"refId":"[3:40]","endTime":1621439470107,"exampleIndex":-1}],"callDepth":0,"name":"Test that the graphql API met the acceptance criteria","description":"","resultDate":"2021-05-19 05:51:10 p.Â m.","durationMillis":43548.7698,"passedCount":1}